# HMS Networks Solution Center
# Ewon JTK Java Connector Release Script for GitHub Actions
# Version: 1.0

name: Ewon Java Connector Release Build

env:
  SRC_FOLDER: lib src
  ETK_URL: https://github.com/hms-networks/GitHub-Actions-Generic/raw/main/libs/ewon-java-etk-1.4.4.jar
  ETK_LOCAL_FILE_NAME: ewon-java-etk.jar
  TMP_CP_FOLDER: tmp_classpath
  TMP_JAVADOC_FOLDER: doc
  BUILD_FOLDER: ./build
  CONFIG_FOLDER: example
  SCRIPTS_FOLDER: scripts
  README_NAME: README.md
  LICENSE_NAME: LICENSE
  CHANGELOG_NAME: CHANGELOG.md
  BUILD_FILE_NAME: build.xml
  CLASSPATH_NAME: .classpath
  PROJECT_NAME: .project

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up JDK v1.8 (Ubuntu)
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Create Temporary Classpath Folder (Ubuntu)
        run: mkdir ./$TMP_CP_FOLDER

      - name: Create Build Output Directory (Ubuntu)
        run: mkdir ./bin

      - name: Download Ewon ETK from hms-networks/GitHub-Actions-Generic/libs/ (Ubuntu)
        run: curl -o ./$TMP_CP_FOLDER/$ETK_LOCAL_FILE_NAME -L $ETK_URL

      - name: Configure Permissions of Temporary Classpath Folder (Ubuntu)
        run: chmod -R +rwx ./$TMP_CP_FOLDER

      - name: Checkout Project Submodules
        uses: textbook/git-checkout-submodule-action@master
        with:
          remote: true

      - name: Build Java Files in /src and /libs with Target/Source of 1.4 (Ubuntu)
        run: javac -source 1.4 -target 1.4 -cp ./$TMP_CP_FOLDER/$ETK_LOCAL_FILE_NAME -d bin $(find $SRC_FOLDERS -name "*.java")

      - name: Generate Javadocs for Java Files in /src and /libs (Ubuntu)
        run: javadoc -private -splitindex -use -author -version -d $TMP_JAVADOC_FOLDER -classpath ./$TMP_CP_FOLDER/$ETK_LOCAL_FILE_NAME $(find $SRC_FOLDER -name "*.java")

      - name: Build Ewon Jar in Ant (Ubuntu)
        run: ant "buildjar" -noinput -buildfile build.xml

      - name: Parse Ant Build File for Project Name (Ubuntu)
        run: |
          export PROJECTNAME=$(sed -n 's/<property name=\"ProjectName\"\ value=\"\(.*\)\"\/>/\1/p' build.xml | tr -d '[:space:]')
          echo "PROJECT_NAME=$PROJECTNAME" >> $GITHUB_ENV

      - name: Build Release
        run: |
          zip release -r $README_NAME $LICENSE_NAME $CHANGELOG_NAME $BUILD_FILE_NAME $CLASSPATH_NAME $PROJECT_NAME $SRC_FOLDER $TMP_JAVADOC_FOLDER $BUILD_FOLDER $CONFIG_FOLDER $SCRIPTS_FOLDER
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip