<?xml version="1.0" encoding="UTF-8" standalone="no"?><Entities build="b20" majorVersion="9" minorVersion="3" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="0" schemaVersion="1130" universal="password"><StyleDefinitions/><Networks/><PersistenceProviderPackages/><Mashups/><ScriptFunctionLibraries/><Projects><Project artifactId="" aspect.projectType="Component" dependsOn="{&quot;extensions&quot;:&quot;&quot;,&quot;projects&quot;:&quot;&quot;}" description="This project contains all things and services that are required by the Ewon Thingworx Connector." documentationContent="Version: 3.3.0&#10;&#10;Additional information and updated source code may be found online at https://github.com/hms-networks/flexy-thingworx-connector/" groupId="" homeMashup="" lastModifiedDate="2022-07-20T19:28:06.027Z" minPlatformVersion="" name="EwonThingworxConnector" packageVersion="1.0.0" projectName="EwonThingworxConnector" publishResult="" state="DRAFT" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, description : updated, documentationContent : updated&#10;" timestamp="2020-10-08T15:22:51.334Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2020-10-08T15:38:39.155Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:43:29.052Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:52:22.846Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-11-30T13:22:13.345Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2020-11-30T13:35:25.243Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2021-04-06T13:41:54.527Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2021-05-10T17:24:57.104Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2021-05-11T13:48:38.192Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2021-05-11T14:58:35.645Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2021-05-17T17:36:13.278Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.470Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : documentationContent : updated&#10;" timestamp="2022-07-20T19:28:06.027Z" user="Administrator"/></ConfigurationChanges></Project></Projects><Users/><DirectoryServices/><Widgets/><MediaEntities/><Groups/><PersistenceProviders/><ModelTags/><LocalizationTables/><Dashboards/><StyleThemes/><DataShapes><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2022-06-07T13:16:21.780Z" name="M2Web-Live-Data" projectName="EwonThingworxConnector" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.friendlyName="Tag Alarm Status" aspect.isPrimaryKey="false" baseType="INTEGER" description="The status of the tag's alarm on the Ewon device." name="AlStatus" ordinal="4"/><FieldDefinition aspect.friendlyName="Tag Alarm Type" aspect.isPrimaryKey="false" baseType="INTEGER" description="The type of alarm for the tag on the Ewon device." name="AlType" ordinal="5"/><FieldDefinition aspect.friendlyName="Tag Value Quality" aspect.isPrimaryKey="false" baseType="INTEGER" description="The quality of the tag value on the Ewon device." name="Quality" ordinal="6"/><FieldDefinition aspect.friendlyName="Tag ID" aspect.isPrimaryKey="false" baseType="INTEGER" description="The tag identifier on the Ewon device." name="TagId" ordinal="1"/><FieldDefinition aspect.friendlyName="Tag Name" aspect.isPrimaryKey="false" baseType="STRING" description="The name of the tag on the Ewon Device." name="TagName" ordinal="2"/><FieldDefinition aspect.friendlyName="Tag Value" aspect.isPrimaryKey="false" baseType="STRING" description="The value of the tag on the Ewon device." name="Value" ordinal="3"/><FieldDefinition aspect.friendlyName="Value Integer" aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="ValueInteger" ordinal="7"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2021-05-12T14:21:44.920Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : TagId : added, TagName : added, Value : added, AlStatus : added, Value : updated, AlType : added, Quality : added&#10;" timestamp="2021-05-12T14:31:31.228Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ValueInteger : added&#10;" timestamp="2021-05-13T12:59:30.023Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.388Z" user="Administrator"/></ConfigurationChanges></DataShape></DataShapes><Things><Thing description="This is a generic value stream that can accept and store the datapoints for configured thing properties." documentationContent="" effectiveThingPackage="ValueStreamThing" enabled="true" homeMashup="StreamMashup" identifier="" inheritedValueStream="" lastModifiedDate="2022-06-07T13:16:21.942Z" name="GenericEwonDeviceValueStream" projectName="EwonThingworxConnector" published="false" tags="" thingTemplate="ValueStream" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Value Stream performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.475Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2022-06-07T13:16:21.937Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="The main service provider of the Ewon Thingworx Connector. This 'thing' provides the services required for receiving and processing data from the Ewon Talk2M cloud and the Ewon Thingworx Connector Java application for Flexy. The Ewon Thingworx Connector configuration can be modified by editing the properties of this 'thing'." documentationContent="" effectiveThingPackage="TimerThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2022-07-20T19:26:36.338Z" name="ConnectorHost" projectName="EwonThingworxConnector" published="false" tags="" thingTemplate="Timer" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="General Settings" isHidden="true" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="true" baseType="BOOLEAN" description="Automatically enable timer on startup" name="enabled" ordinal="0"/><FieldDefinition baseType="USERNAME" description="User context in which to run event handlers" name="runAsUser" ordinal="0"/><FieldDefinition aspect.defaultValue="60000.0" baseType="NUMBER" description="Update rate" name="updateRate" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><enabled>true</enabled><runAsUser><![CDATA[Administrator]]></runAsUser><updateRate>30000.0</updateRate></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="true" aspect.isPersistent="true" baseType="BOOLEAN" category="" description="" isLocalOnly="false" name="disableTalk2M" ordinal="10"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="-1" aspect.isPersistent="true" baseType="INTEGER" category="" description="" isLocalOnly="false" name="lastTransactionId" ordinal="16"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="DATETIME" category="" description="" isLocalOnly="false" name="lastUpdateTime" ordinal="16"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="30" aspect.isPersistent="true" aspect.units="seconds" baseType="INTEGER" category="" description="" isLocalOnly="false" name="scriptTimeoutSeconds" ordinal="12"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MAccount" ordinal="14"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MDeveloperID" ordinal="12"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MPassword" ordinal="13"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MToken" ordinal="9"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MUsername" ordinal="12"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="10" aspect.isPersistent="true" aspect.units="" baseType="INTEGER" category="" description="" isLocalOnly="false" name="updateTimeoutMinutes" ordinal="16"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="false" aspect.isPersistent="true" baseType="BOOLEAN" category="" description="When set to true, all newly created properties will use 'Always' for the DataChangeType." isLocalOnly="false" name="useDataChangeTypeAlways" ordinal="13"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="false" aspect.isPersistent="true" baseType="BOOLEAN" category="" description="True indicates that the tag name, up to the first hypen, will be appended to the thing name. This allows for a more refined organization of things and their properties." isLocalOnly="false" name="useHyphens" ordinal="17"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="Adds a new thing and app key for an Ewon device that will be connected to Thingworx directly, using the Ewon Thingworx Connector." isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="AddNewDirectStandaloneDevice"><ResultType baseType="JSON" description="Endpoint and application key information for the generated thing." name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="DATETIME" description="The expiration date/time of the generated device application key." name="thingAppKeyExpiration" ordinal="2"/><FieldDefinition aspect.isRequired="true" baseType="USERNAME" description="The user reference for the generated device application key." name="thingAppKeyUser" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="The desired name for the new Thing to create." name="thingName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="InsertDataPoint"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="2"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagQuality" ordinal="5"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagType" ordinal="6"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagValue" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="timestamp" ordinal="4"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="true" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="MainExecution"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="true" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ProcessTimeSinceUpdate"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="BOOLEAN" description="" name="hasUpdated" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="true" category="" description="Landing function that an ewon can connect to" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="TakeInfo"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="Tags" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="Grabs all historical data from the DataMailbox then cleans all of the recieved data from data mailbox" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="Talk2MSyncData"><ResultType baseType="JSON" description="returns usedTransactionId which is the most recent TransactionId actually processed and ready for deletion and nextTransactionId, the next transaction id to be called." name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="-1" baseType="INTEGER" description="" name="initialTransactionId" ordinal="1"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="AddNewDirectStandaloneDevice"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Create new application key for device/thing
var appKeyName = thingName + "_APPLICATION-KEY";
let appKeyParams = {
    clientName: undefined /* STRING */ ,
    name: appKeyName /* STRING */ ,
    description: "Unique application key for thing: " + thingName /* STRING */ ,
    whitelist: undefined /* STRING */ ,
    projectName: "EwonThingworxConnector" /* PROJECTNAME */ ,
    user: thingAppKeyUser /* USERNAME */ ,
    tags: undefined /* TAGS */ ,
    expirationDate: thingAppKeyExpiration /* DATETIME */
};
Resources["EntityServices"].CreateApplicationKey(appKeyParams);

// Create new thing
let thingParams = {
    name: thingName /* STRING */ ,
    description: "Created by EwonThingworxConnector" /* STRING */ ,
    thingTemplateName: "GenericEwonDeviceDirectStandalone" /* THINGTEMPLATENAME */ ,
    projectName: "EwonThingworxConnector",
    tags: undefined /* TAGS */ ,
};
Resources["EntityServices"].CreateThing(thingParams);

// Enable and restart thing
Things[thingName].EnableThing();
Things[thingName].RestartThing();

// Return JSON with device endpoint URL and application key
let deviceEndpoint = "http[s]://[ThingworxURL]/Thingworx/Things/" + thingName + "/Services/TakeInfo";
let appKeyId = ApplicationKeys[appKeyName].GetKeyID();
let result = {
    deviceName: thingName /* STRING */,
    deviceEndpoint: deviceEndpoint /* STRING */ ,
    deviceAppKeyName: appKeyName /* STRING */,
    deviceAppKey: appKeyId /* STRING */
};]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="InsertDataPoint"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Inserts a datapoint to its respective thing property
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {

    // Log information
    logger.info("Inserting datapoint for property [" + tagName + "] on Thing [" + ewonName + "] with value [" + tagValue + "], quality [" + tagQuality + "], type [" + tagType + "] and timestamp [" + timestamp + "].");

    // Convert tag value to proper type
    var tagValFinal = tagValue;
    if (tagType === "INTEGER") {
        tagValFinal = parseInt(tagValue);
    }

    // Update property value
    var createITParams = {
        infoTableName: "InfoTable",
        dataShapeName: "NamedVTQ"
    };
    var properties = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(createITParams);
    var row = new Object();
    row.name = tagName;
    row.value = tagValFinal;
    row.quality = tagQuality;
    row.time = new Date(timestamp);
    properties.AddRow(row);
    Things[ewonName].UpdatePropertyValues({
        values: properties
    });



}
if (tagName && ewonName && tagValue && timestamp) {
    run();
} else {
    logger.error(
        'One or more parameters for InsertDataPoint were undefined or null.'
    );
    logger.debug(
        'tagName: ' +
        tagName +
        ' ewonName: ' +
        ewonName +
        'tagValue: ' +
        tagValue +
        'timestamp: ' +
        timestamp
    );
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="MainExecution"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Main Execution loop of the connector, gets historical data from Talk2M
 *
 * @author HMS Networks, MU Americas Solution Center
 */
var startTimeMillis = Date.now();

/*
 * Current configured script timeout length.
 * Exceeding this will throw errors.
 */
var timeoutLengthMillis = me.scriptTimeoutSeconds * 1000;

// The previous transaction ID
var prevTransactionId = me.lastTransactionId;

// the longest time that Talk2MSyncData has taken to Execute
var longestSyncDataExecutionMillis = 0;

// decreasing this buffer will cause this service to ride closer to the edge of a timeout error
var syncDataIncreaseBufferMillis = 1000;
var getResult;

var timeElapsedMillis = Date.now() - startTimeMillis;

/*
 * Once timeElapsedMillis is greater than maxExecutionTimeMillis, no more Talk2MSyncData calls will be made.
 * This should be enough time that even if a Talk2MSyncData execution was started 1 millisecond before maxExecutionTimeMillis,
 * a timeout error would still not occur.
 */
var maxExecutionTimeMillis =
    timeoutLengthMillis -
    (longestSyncDataExecutionMillis + syncDataIncreaseBufferMillis);

/*
 * This loop calls Talk2MSyncData as many times as it can within maxExecutionTimeMillis.
 */
while (timeElapsedMillis < maxExecutionTimeMillis) {
    // clocks how long each Talk2MSyncData call takes
    var syncDataStartExecutionMillis = Date.now();
    getResult = me.Talk2MSyncData();
    var syncDataEndExecutionMillis = Date.now();

    // only updates longestSyncDataExecutionMillis when this is the longest Execution
    var syncDataExecutionMillis = syncDataEndExecutionMillis - syncDataStartExecutionMillis;
    if (
        syncDataExecutionMillis >
        longestSyncDataExecutionMillis
    ) {
        longestSyncDataExecutionMillis =
            syncDataExecutionMillis;
    }

    if (getResult.done) {
        break;
    }

    // updating timing variables for while loop
    maxExecutionTimeMillis =
        timeoutLengthMillis -
        (longestSyncDataExecutionMillis + syncDataIncreaseBufferMillis);
    timeElapsedMillis = Date.now() - startTimeMillis;
}
if (!getResult.done) {
    logger.warn(
        'Syncdata was not able to execute within the set timeout length. To resolve this, ' +
        'increase scriptTimeout in platform-settings.json, or run MainExecution more often.'
    );
}
// If transaction ID has not increased, no data updates performed
if (prevTransactionId == me.lastTransactionId) {
    // there has been no new update of information
    me.ProcessTimeSinceUpdate({
        hasUpdated: false
    });
} else {
    // There was new information, most recent update time is now
    me.ProcessTimeSinceUpdate({
        hasUpdated: true
    });
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ProcessTimeSinceUpdate"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Keeps track of the time since the last data update was received. If the time
 * is long enough, then an error is sent.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
const MILLISECONDS_PER_MINUTE = 60000;
if (hasUpdated) {
  // There was an update, so the last update time is changed to now
  me.lastUpdateTime = Date.now();
} else {
  const timeSinceLastUpdateMillis = Date.now() - me.lastUpdateTime;
  const maximumAllowedTimeSinceLastUpdateMillis =
    MILLISECONDS_PER_MINUTE * me.updateTimeoutMinutes;
  if (timeSinceLastUpdateMillis > maximumAllowedTimeSinceLastUpdateMillis) {
    logger.error(
      'A data update has not been received since ' + me.lastUpdateTime
    );
  }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="TakeInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const EWON_DATA_QUALITY_BAD = 0;
const EWON_DATA_QUALITY_UNKNOWN = 1;
const EWON_DATA_QUALITY_GOOD = 3;
const EWON_DATA_TYPE_BOOLEAN = 0;
const EWON_DATA_TYPE_FLOAT = 1;
const EWON_DATA_TYPE_INTEGER = 2;
const EWON_DATA_TYPE_DWORD = 3;
const EWON_DATA_TYPE_STRING = 4;

/*
 * Alternative method that avoids using DataMailbox to send data to Thingworx.
 * Uses a Ewon Thingworx connector which runs on a Flexy.
 * More information can be found in the README.md file.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function to enable early returns
function run() {
    var parsedTags = JSON.parse(Tags);
    var ewonName = parsedTags.info["ewon-name"];

    // tagArray holds the datapoints array which contains all logged data
    var tagArray = parsedTags["datapoints"];

    var i;
    for (i = 0; i < tagArray.length; i += 1) {
        var tag = tagArray[i];
        // Get tag data quality
        var tagQuality = "UNKNOWN";
        if ("quality" in tag) {
            if (tag.quality === EWON_DATA_QUALITY_BAD) {
                tagQuality = "BAD";
            } else if (tag.quality === EWON_DATA_QUALITY_GOOD) {
                tagQuality = "GOOD";
            }
        } else {
            logger.warn("The connected Ewon device is not sending tag quality information. Check that the Ewon Thingworx Connector has been updated on the Ewon device!");
        }

        // Get tag data type
        var tagType;
        if ("type" in tag) {
            if (tag.type === EWON_DATA_TYPE_BOOLEAN) {
                // Ewon Boolean tag converts to Thingworx Boolean
                tagType = "BOOLEAN";
            } else if (tag.type === EWON_DATA_TYPE_FLOAT) {
                // Ewon Float tag converts to Thingworx Number
                tagType = "NUMBER";
            } else if (tag.type === EWON_DATA_TYPE_INTEGER) {
                // Ewon Integer tag converts to Thingworx Integer
                tagType = "INTEGER";
            } else if (tag.type === EWON_DATA_TYPE_DWORD) {
                // Ewon DWORD tag converts to Thingworx Number
                tagType = "NUMBER";
            } else if (tag.type === EWON_DATA_TYPE_STRING) {
                // Ewon String tag converts to Thingworx String
                tagType = "STRING";
            } else {
                // Unknown tag type, default to Thingworx Number
                logger.warn("Unknown tag type (" + tag.type + ") for tag: " + tag.name);
                tagType = "NUMBER";
            }
        } else {
            logger.warn("The connected Ewon device is not sending tag type information. Check that the Ewon Thingworx Connector has been updated on the Ewon device!");
        }

        /* 
         * Get thing name (if use hypens enabled, 
         * include tag name up to first hypen)
         */
        var thingName = ewonName;
        var propName = tag.name;
        if (me.useHyphens === true && tag.name.includes("-")) {
            thingName = ewonName + "-" + tag.name.substring(0, tag.name.indexOf("-"));
            propName = tag.name.substring(tag.name.indexOf("-") + 1);
        }

        // Attempt to access thing, if fails, need to create thing
        try {
            // Test read thing name
            var thingNameTest;
            thingNameTest = Things[thingName].name;
        } catch (err) {
            // Need to create new thing
            var params = {
                name: thingName /* STRING */ ,
                description: "Created by EwonThingworxConnector" /* STRING */ ,
                thingTemplateName: "GenericEwonDeviceDirect" /* THINGTEMPLATENAME */ ,
                projectName: "EwonThingworxConnector",
                tags: undefined /* TAGS */ ,
            };
            Resources["EntityServices"].CreateThing(params);
            Things[thingName].EnableThing();
            Things[thingName].RestartThing();
        }

        // Check if property exists/needs to be created
        var needToCreateProperty = false;
        try {
            var propertyLogging = Things[thingName].GetPropertyLogging({
                propertyName: propName
            });
        } catch (err) {
            needToCreateProperty = true;
        }

        // Create property if necessary
        if (needToCreateProperty) {
            // Get property data change type for creation
            var propDataChangeType = "VALUE";
            if (me.useDataChangeTypeAlways) {
                propDataChangeType = "ALWAYS";
            }

            Things[thingName].AddPropertyDefinition({
                readOnly: false,
                remote: false,
                type: tagType,
                logged: true,
                name: propName,
                persistent: true,
                dataChangeType: propDataChangeType
            });
            Things[thingName].RestartThing();
        }

        // Add datapoint to Thing
        me.InsertDataPoint({
            tagName: propName /* STRING */ ,
            ewonName: thingName /* STRING */ ,
            tagValue: tag.value /* STRING */ ,
            timestamp: tag.timestamp /* STRING */ ,
            tagQuality: tagQuality /* STRING */ ,
            tagType: tagType /* STRING */
        });
    }
}
run();

// Registers that an update has been received
me.ProcessTimeSinceUpdate({
    hasUpdated: true
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="Talk2MSyncData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const TW_DATA_TYPE_BOOLEAN = "BOOLEAN";
const TW_DATA_TYPE_INTEGER = "INTEGER";
const TW_DATA_TYPE_NUMBER = "NUMBER";
const TW_DATA_TYPE_STRING = "STRING";
const TW_DATA_QUALITY_GOOD = "GOOD";
const TW_DATA_QUALITY_BAD = "BAD";
const TW_DATA_QUALITY_UNKNOWN = "UNKNOWN";
const T2M_DATA_QUALITY_BAD = "bad";
const T2M_DATA_QUALITY_UNKNOWN = "unknown";

/*
 * Talk2MSyncData gets and inserts all logged data from DataMailbox.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
function parseEwon(ewon) {
	// Gets Ewon name without leading/trailing spaces
	var ewonName = ewon.name.trim();

	// Loop through each tag listed
	ewon.tags.forEach((tag) => {
		// Get tag data type
		var tagType;
		if (tag.dataType === "Int") {
			tagType = TW_DATA_TYPE_INTEGER;
		} else if (tag.dataType === "Bool") {
			tagType = TW_DATA_TYPE_BOOLEAN;
		} else if (tag.dataType === "Float") {
			tagType = TW_DATA_TYPE_NUMBER;
		} else if (tag.dataType === "UInt") {
			tagType = TW_DATA_TYPE_NUMBER;
		} else if (tag.dataType === "String") {
			tagType = TW_DATA_TYPE_STRING;
		} else {
			logger.warn("Unknown data type (" + tag.dataType + ") for tag: " + tag.name);
			tagType = TW_DATA_TYPE_NUMBER;
		}

		/* 
		 * Get thing name (if use hypens enabled, 
		 * include tag name up to first hypen)
		 */
		var thingName = ewonName;
		var propName = tag.name;
		if (me.useHyphens === true && tag.name.includes("-")) {
			thingName = ewonName + "-" + tag.name.substring(0, tag.name.indexOf("-"));
			propName = tag.name.substring(tag.name.indexOf("-") + 1);
		}

		// Attempt to access thing, if fails, need to create thing
		try {
			// Test read thing name
			var thingNameTest;
			thingNameTest = Things[thingName].name;
		} catch (err) {
			// Need to create new thing
			var params = {
				name: thingName /* STRING */ ,
				description: "Created by EwonThingworxConnector" /* STRING */ ,
				thingTemplateName: "GenericEwonDeviceTalk2M" /* THINGTEMPLATENAME */ ,
				projectName: "EwonThingworxConnector",
				tags: undefined /* TAGS */ ,
			};
			Resources["EntityServices"].CreateThing(params);
			Things[thingName].EnableThing();
			Things[thingName].RestartThing();
		}

		// Check if property exists/needs to be created
		var needToCreateProperty = false;
		try {
			var propertyLogging = Things[thingName].GetPropertyLogging({
				propertyName: propName
			});
		} catch (err) {
			needToCreateProperty = true;
		}

		// Create property if necessary
		if (needToCreateProperty) {
			// Get property data change type for creation
			var propDataChangeType = "VALUE";
			if (me.useDataChangeTypeAlways) {
				propDataChangeType = "ALWAYS";
			}

			Things[thingName].AddPropertyDefinition({
				readOnly: false,
				remote: false,
				type: tagType,
				logged: true,
				name: propName,
				persistent: true,
				dataChangeType: propDataChangeType
			});
			Things[thingName].RestartThing();
		}

		if (tag.history) {
			// Process each historical data point
			tag.history.forEach((datapoint) => {

				// Get tag data quality (Talk2M only returns if it is not 'good')
				var tagQuality = TW_DATA_QUALITY_GOOD;
				if (datapoint.quality === T2M_DATA_QUALITY_BAD) {
					tagQuality = TW_DATA_QUALITY_BAD;
				} else if (datapoint.quality === T2M_DATA_QUALITY_UNKNOWN) {
					tagQuality = TW_DATA_QUALITY_UNKNOWN;
				}

				// Add datapoint to Thing
				me.InsertDataPoint({
					tagName: propName /* STRING */ ,
					ewonName: thingName /* STRING */ ,
					tagValue: datapoint.value /* STRING */ ,
					timestamp: datapoint.date /* STRING */ ,
					tagQuality: tagQuality /* STRING */ ,
					tagType: tagType /* STRING */
				});
			});
		}
	});
}
// wrapper function to enable early returns
function run() {
	var url = 'https://data.talk2m.com/syncdata';

	var talk2MParameters =
		't2mdevid=' +
		me.talk2MDeveloperID +
		'&t2mtoken=' +
		me.talk2MToken;

	// Create transaction if no ID previously stored
	if (me.lastTransactionId === -1) {
		talk2MParameters = talk2MParameters + '&createTransaction=true';
	} else {
		talk2MParameters = talk2MParameters + '&createTransaction=true&lastTransactionId=' + me.lastTransactionId;
	}

	var headerJSON = {
		'Content-Type': 'application/x-www-form-urlencoded',
	};
	var params = {
		headers: headerJSON /* JSON */ ,
		url: encodeURI(url) /* STRING */ ,
		content: talk2MParameters /* JSON */ ,
	};

	/*
	 * sends API request to DataMailbox
	 * response: JSON as a string
	 */
	var response = Resources['ContentLoaderFunctions'].PostText(params);
	/*
	 * There is some unnecessary information about the post call appended to the end of the response.
	 * Parsing the response from the start to the last bracket avoids any errors.
	 */
	response = JSON.parse(response.substring(0, response.indexOf('^Content-Type')));
	if (!response['success']) {
		logger.error(
			'Error calling DataMailbox API in Talk2MSyncData. Error: ' +
			response['message']
		);
		return;
	}
	if (response.transactionId) {
		me.lastTransactionId = parseInt(response.transactionId);
	}
	var ewons = response.ewons;
	ewons.forEach(parseEwon);
	// check to see if more data is available, if so, store that value to be returned later
	var done = false;
	if (response.moreDataAvailable === undefined) {
		done = true;
	}

	return {
		done: done
	};
}
// this acts as a return statement
var result = run();]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions><Subscription description="" enabled="true" eventName="Timer" name="runConnector" source="" sourceProperty="" sourceType="Thing"><ServiceImplementation description="" handlerName="Script" name="runConnector"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[if (!me.disableTalk2M) {
    me.MainExecution();
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription></Subscriptions></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="disableTalk2M"/><AlertDefinitions name="lastTransactionId"/><AlertDefinitions name="lastUpdateTime"/><AlertDefinitions name="scriptTimeoutSeconds"/><AlertDefinitions name="talk2MAccount"/><AlertDefinitions name="talk2MDeveloperID"/><AlertDefinitions name="talk2MPassword"/><AlertDefinitions name="talk2MToken"/><AlertDefinitions name="talk2MUsername"/><AlertDefinitions name="updateTimeoutMinutes"/><AlertDefinitions name="useDataChangeTypeAlways"/><AlertDefinitions name="useHyphens"/></AlertConfigurations><ImplementedShapes/><ThingProperties><useHyphens><Value>false</Value><Timestamp>2020-10-19T13:35:55.942Z</Timestamp><Quality>GOOD</Quality></useHyphens><talk2MToken><Value/><Timestamp>2022-07-20T19:24:37.941Z</Timestamp><Quality>GOOD</Quality></talk2MToken><talk2MUsername><Value/><Timestamp>2022-07-20T19:24:58.729Z</Timestamp><Quality>GOOD</Quality></talk2MUsername><lastTransactionId><Value>-1</Value><Timestamp>2022-07-20T19:22:58.942Z</Timestamp><Quality>GOOD</Quality></lastTransactionId><talk2MAccount><Value/><Timestamp>2022-07-20T19:24:51.359Z</Timestamp><Quality>GOOD</Quality></talk2MAccount><updateTimeoutMinutes><Value>10</Value><Timestamp>2020-10-02T20:13:26.007Z</Timestamp><Quality>GOOD</Quality></updateTimeoutMinutes><talk2MDeveloperID><Value/><Timestamp>2022-07-20T19:24:46.529Z</Timestamp><Quality>GOOD</Quality></talk2MDeveloperID><useDataChangeTypeAlways><Value>false</Value><Timestamp>2022-07-20T19:25:05.459Z</Timestamp><Quality>GOOD</Quality></useDataChangeTypeAlways><disableTalk2M><Value>true</Value><Timestamp>2022-07-20T19:22:53.841Z</Timestamp><Quality>GOOD</Quality></disableTalk2M><scriptTimeoutSeconds><Value>30</Value><Timestamp>2020-10-08T15:30:06.869Z</Timestamp><Quality>GOOD</Quality></scriptTimeoutSeconds><talk2MPassword><Value/><Timestamp>2022-07-20T19:24:42.259Z</Timestamp><Quality>GOOD</Quality></talk2MPassword><lastUpdateTime><Value>1970-01-01T05:00:00.000Z</Value><Timestamp>2022-07-20T19:23:25.209Z</Timestamp><Quality>GOOD</Quality></lastUpdateTime></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.482Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:42:04.793Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:42:58.175Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:43:44.856Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:50:17.431Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:50:56.640Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T14:58:20.035Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T15:02:34.240Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T15:02:44.295Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T15:03:06.080Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T15:04:15.929Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T17:49:10.918Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T17:50:16.499Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T17:50:57.935Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T17:51:05.923Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T17:53:43.871Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2022-07-20T18:08:40.439Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T18:46:59.857Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2022-07-20T18:51:05.184Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T18:52:11.531Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T18:53:42.912Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T18:55:14.298Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2022-07-20T18:56:13.923Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T18:56:35.772Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T18:58:43.249Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T19:01:09.854Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T19:02:10.752Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : Talk2MSyncData : service updated&#10;" timestamp="2022-07-20T19:03:43.034Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T19:04:43.279Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T19:05:12.891Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : input parameter isTalk2MDevice deleted, inputs updated&#10;" timestamp="2022-07-20T19:06:08.791Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2022-07-20T19:06:22.232Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2022-07-20T19:06:31.973Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2022-07-20T19:26:31.069Z" user="Administrator"/></ConfigurationChanges></Thing></Things><Logs/><Authenticators/><ThingPackages/><NotificationDefinitions/><ApplicationKeys/><StateDefinitions/><ThingTemplates><ThingTemplate baseThingTemplate="GenericEwonDeviceDirect" description="The base thing template which provides properties and services for Ewon devices that have been connected to Thingworx using the Ewon Thingworx Connector direct data path, using a standalone endpoint for each device to submit data to Thingworx." documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="GenericEwonDeviceValueStream" lastModifiedDate="2022-06-07T13:16:21.842Z" name="GenericEwonDeviceDirectStandalone" projectName="EwonThingworxConnector" tags="" thingPackage="" valueStream="GenericEwonDeviceValueStream"><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="lastUpdateTime"/></AlertConfigurations><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="1970-01-01T05:00:00.000Z" baseType="DATETIME" category="" description="" isLocalOnly="false" name="lastUpdateTime" ordinal="2"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="InsertDataPoint"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagQuality" ordinal="4"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagType" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagValue" ordinal="2"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="timestamp" ordinal="5"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ProcessTimeSinceUpdate"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="BOOLEAN" description="" name="hasUpdated" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="TakeInfo"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="JSON" description="" name="Tags" ordinal="1"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="InsertDataPoint"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Inserts a datapoint to its respective thing property
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
    // Get thing and property name
    var thingName = me.name;
    var propName = tagName;

    // Log information
    logger.info("Inserting datapoint for property [" + tagName + "] on Thing [" + thingName + "] with value [" + tagValue + "], quality [" + tagQuality + "], type [" + tagType + "] and timestamp [" + timestamp + "].");

    // Check if property exists/needs to be created
    var needToCreateProperty = false;
    try {
        var propertyLogging = Things[thingName].GetPropertyLogging({
            propertyName: tagName
        });
    } catch (err) {
        needToCreateProperty = true;
    }

    // Create property if necessary
    if (needToCreateProperty) {
        // Get property data change type for creation
        var propDataChangeType = "VALUE";
        if (me.useDataChangeTypeAlways) {
            propDataChangeType = "ALWAYS";
        }
        
        Things[thingName].AddPropertyDefinition({
            readOnly: false,
            remote: false,
            type: tagType,
            logged: true,
            name: tagName,
            persistent: true,
            dataChangeType: propDataChangeType
        });
        Things[thingName].RestartThing();
    }

    // Convert tag value to proper type
    var tagValFinal = tagValue;
    if (tagType === "INTEGER") {
        tagValFinal = parseInt(tagValue);
    }

    // Update property value
    var createITParams = {
        infoTableName: "InfoTable",
        dataShapeName: "NamedVTQ"
    };
    var properties = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(createITParams);
    var row = new Object();
    row.name = propName;
    row.value = tagValFinal;
    row.quality = tagQuality;
    row.time = new Date(timestamp);
    properties.AddRow(row);
    Things[thingName].UpdatePropertyValues({
        values: properties
    });



}
if (tagName && tagValue && timestamp) {
    run();
} else {
    logger.error(
        'One or more parameters for InsertDataPoint were undefined or null.'
    );
    logger.debug(
        'tagName: ' +
        tagName +
        'tagValue: ' +
        tagValue +
        'timestamp: ' +
        timestamp
    );
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ProcessTimeSinceUpdate"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Keeps track of the time since the last data update was received. If the time
 * is long enough, then an error is sent.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
const MILLISECONDS_PER_MINUTE = 60000;
if (hasUpdated) {
  // There was an update, so the last update time is changed to now
  me.lastUpdateTime = Date.now();
} else {
  const timeSinceLastUpdateMillis = Date.now() - me.lastUpdateTime;
  const maximumAllowedTimeSinceLastUpdateMillis =
    MILLISECONDS_PER_MINUTE * me.updateTimeoutMinutes;
  if (timeSinceLastUpdateMillis > maximumAllowedTimeSinceLastUpdateMillis) {
    logger.error(
      'A data update has not been received since ' + me.lastUpdateTime
    );
  }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="TakeInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const EWON_DATA_QUALITY_BAD = 0;
const EWON_DATA_QUALITY_UNKNOWN = 1;
const EWON_DATA_QUALITY_GOOD = 3;
const EWON_DATA_TYPE_BOOLEAN = 0;
const EWON_DATA_TYPE_FLOAT = 1;
const EWON_DATA_TYPE_INTEGER = 2;
const EWON_DATA_TYPE_DWORD = 3;
const EWON_DATA_TYPE_STRING = 4;

/*
 * Alternative method that avoids using DataMailbox to send data to Thingworx.
 * Uses a Ewon Thingworx connector which runs on a Flexy.
 * More information can be found in the README.md file.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function to enable early returns
function run() {
    var parsedTags = JSON.parse(Tags);

    // tagArray holds the datapoints array which contains all logged data
    var tagArray = parsedTags["datapoints"];

    var i;
    for (i = 0; i < tagArray.length; i += 1) {
        var tag = tagArray[i];
        // Get tag data quality
        var tagQuality = "UNKNOWN";
        if ("quality" in tag) {
            if (tag.quality === EWON_DATA_QUALITY_BAD) {
                tagQuality = "BAD";
            } else if (tag.quality === EWON_DATA_QUALITY_GOOD) {
                tagQuality = "GOOD";
            }
        } else {
            logger.warn("The connected Ewon device is not sending tag quality information. Check that the Ewon Thingworx Connector has been updated on the Ewon device!");
        }

        // Get tag data type
        var tagType;
        if ("type" in tag) {
            if (tag.type === EWON_DATA_TYPE_BOOLEAN) {
                // Ewon Boolean tag converts to Thingworx Boolean
                tagType = "BOOLEAN";
            } else if (tag.type === EWON_DATA_TYPE_FLOAT) {
                // Ewon Float tag converts to Thingworx Number
                tagType = "NUMBER";
            } else if (tag.type === EWON_DATA_TYPE_INTEGER) {
                // Ewon Integer tag converts to Thingworx Integer
                tagType = "INTEGER";
            } else if (tag.type === EWON_DATA_TYPE_DWORD) {
                // Ewon DWORD tag converts to Thingworx Number
                tagType = "NUMBER";
            } else if (tag.type === EWON_DATA_TYPE_STRING) {
                // Ewon String tag converts to Thingworx String
                tagType = "STRING";
            } else {
                // Unknown tag type, default to Thingworx Number
                logger.warn("Unknown tag type (" + tag.type + ") for tag: " + tag.name);
                tagType = "NUMBER";
            }
        } else {
            logger.warn("The connected Ewon device is not sending tag type information. Check that the Ewon Thingworx Connector has been updated on the Ewon device!");
        }

        // Add datapoint to Thing
        me.InsertDataPoint({
            tagName: tag.name /* STRING */ ,
            tagValue: tag.value /* STRING */ ,
            timestamp: tag.timestamp /* STRING */ ,
            tagQuality: tagQuality /* STRING */ ,
            tagType: tagType /* STRING */
        });
    }
}
run();

// Registers that an update has been received
me.ProcessTimeSinceUpdate({
    hasUpdated: true
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><ImplementedShapes/><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, description : updated&#10;" timestamp="2021-04-20T12:12:00.996Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service added&#10;" timestamp="2021-04-20T12:21:24.291Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : input parameter Tags added, inputs updated, input parameter Tags updated, inputs updated&#10;" timestamp="2021-04-20T12:24:23.952Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service added&#10;" timestamp="2021-04-20T12:27:00.728Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2021-04-20T12:31:41.921Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-04-27T14:12:35.333Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2021-04-30T12:24:30.110Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-04-30T13:44:31.441Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2021-04-30T13:45:52.063Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2021-04-30T13:46:11.728Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : InsertDataPoint : service updated&#10;" timestamp="2021-04-30T13:46:57.589Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;ProcessTimeSinceUpdate : service added&#10;properties : lastUpdateTime : added&#10;" timestamp="2021-04-30T13:49:58.024Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T13:14:17.226Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T13:15:06.261Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-05-03T14:02:20.980Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2021-05-03T14:02:20.996Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-03T14:07:11.956Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:07:12.003Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:08:51.627Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:10:43.855Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:14:50.852Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:15:53.888Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T14:18:12.012Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:35:26.651Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:40:11.440Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:40:43.822Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:51:00.491Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:53:35.092Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:55:54.641Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:57:17.364Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:58:17.401Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T15:59:18.703Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:04:44.310Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:05:40.357Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : input parameter Tags updated, inputs updated&#10;" timestamp="2021-05-03T16:10:11.053Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:10:56.081Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:12:44.224Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:16:07.720Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:16:53.249Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:17:45.089Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:17:50.303Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:18:41.991Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:23:05.544Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:28:34.837Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:29:23.342Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-03T16:29:43.415Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-10T13:27:34.725Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-10T17:31:32.290Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-10T17:32:22.713Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-10T17:32:54.698Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : TakeInfo : service updated&#10;" timestamp="2021-05-10T17:37:50.954Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2021-05-11T14:58:35.588Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : QueryPropertyValues : service added&#10;" timestamp="2021-05-14T14:21:27.508Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : QueryPropertyValues : service updated&#10;" timestamp="2021-05-14T14:22:37.045Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : QueryPropertyValues : service updated&#10;" timestamp="2021-05-14T14:23:22.413Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-17T17:51:28.759Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-17T17:51:31.404Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;QueryPropertyValues : service deleted&#10;" timestamp="2021-05-17T17:51:44.590Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-17T17:54:00.164Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ProcessTimeSinceUpdate : service updated&#10;" timestamp="2021-05-17T17:56:04.572Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.439Z" user="Administrator"/></ConfigurationChanges></ThingTemplate><ThingTemplate baseThingTemplate="GenericThing" description="The base thing template which provides common properties for all Ewon devices that use the GenericEwonDeviceTalk2M, GenericEwonDeviceDirect, and GenericEwonDeviceDirectStandalone thing templates." documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="" lastModifiedDate="2022-07-20T18:43:19.915Z" name="GenericEwonDevice" projectName="EwonThingworxConnector" tags="" thingPackage="" valueStream="GenericEwonDeviceValueStream"><Owner name="Administrator" type="User"/><avatar><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAGkklEQVR4Xu1WaVBTVxS+oFLHsf3R
RcYpSB1xA3RcoVSxglMsgRAsqARZzFggLIpIUcQdgciutiCLbC4IyCqBsovsBGQzrFFAlkhkUfaE
Jel5ecCAVeKPTvVHvjlJ7rvnu+9+95xz7w0SfGZA73Z8aogFiYJYkCiIBYmCWJAoiAWJgliQKHzG
gqam+JNT8MWHzzzj8+fw/3vwhe/n4z+zgmYePwSMP8tZuD0XeP+C3nfnxQThMWDUNZPP+mrZ07RO
XdOyx4xw6pqmnbu+k3f/4ODsgA8ph+i+2zVnne/14p3M522xWfmphWUDQ8PAR7hWTv9baYIlUiAh
5cNIxRCpYN8SqmS0RX/dwZMjY2Mjo2NDo6OTk9grhrnckTEuvsrhsbGB4eHxiUno547zRrncMR4P
DBowBJ8Yl4V5x4ReLtYYGhnFXjU6Gpac5Roaczc1p7CKCT0InyOtuBJtM5BSM07KK+vo7mllc152
94C1dHX3DwzlVTJlCJY/HDje2sVh9/bJaVvutb4Co+6k5slqULaZOoEm7/uP5Ek2K3WspbWtpAlU
GZLtKqIV5ao/b3wcJLmEPlyjZ4t5CVQwWV3bVdpW1p4hb4YGI1KyguLTEnKLHlfUYIImhIL8HtAl
lEgriVSoaXxZc5FbXguhQjsOt3N6/KJT0GpNeX072AD7T7ojmX1Uj5AaVgtSguiS1xrYK5L/UCI7
yujaAB9t0+/g9BTXNiIFIlIhrz0IXkclI8fvidaYV/lwG5tTzmyKyy58kP6Y0/cGSxkeoWNugWjT
AWltqqVHiJVnCNUj2NrrtrlrgFt4HJBKmc2SqkZLfzarbm5VOXYeKZI2GZ+pYbV+te+YxFaD2udt
wUlZkgpEOb3j/YMD+Bp8o1Ik4YUEC8iU171kSQXd1b8dh0DiXlpEvKSSHvB732L8weGRmbULsBqC
kP5kfhEkS6gaIUXdadush2Q1CPbuQKpofI5+JH+z3xLyslz9qAzJRoHsAFlACrqbjE8DwYIWhNYR
1CwvCWZKleJ6C63XUaY4Q9vMxR+t08azjHuNLt4E7x7qZZgaThZcCl5q2C57MzgoS7JBmw9A8Cvq
WSXPmhh1rPJ6VmltY3v3ayA0tHYs3mX8tab5WgO7LaZnqJ63v1Q322xyGm0ketxNAoKq+QW0Xvuo
iz8UAJc3MTE5udviEkxpeuUv8O6knIO25bVgvlAQYAfFGW0g/u4ehEkUpmgWmCAI/hd7TNBW/dyK
2rm+WUCNL9egSKmZQkjcwuPdIxMha4t3myxXN4MSgT2IVYyCbkB8Bs7njfNkidaSiro+USnjE+Pf
alkA/0Z0Ku591de/goD1+EbR4RHUz04kwAXdz8iX2G6wTJ3y58M02G6PCirohU9TiyqT8xiVjS+A
0PW67zstC6k9RxerGLLaO93CE5ZsP7RImax32gu8UGFLdptIqRpdConNKK0GC0zIXKZBQUp6OeU1
rE72kl3Gi1TImaVV+JSlzCbYzjA8vQTreU+Ekp6UIQUdbB9t0EFrCdO2gYhWqJ31vw8Edk/fUgih
nOZGQwd4tPMJR3K/ADk+txRSUNHIwk4vJT1s+JpfkfyvUE+QQXn9E3DYBCdlIhkNpGzY3N4lTBf/
Zkwqkt2Hdh5idbAFwitrniAoJXjp3fQnl4Ni3CISZo0WmeASFF3f0o7zQpKyacExBdX10M6vqqOF
xN5KyODPHPx/F1d6RiZ6R6Vcj07ziaJDpgLjMnqEOwji4REaF5yYNTOjoKimweN2XEB8OpfHE/zr
7vio2z6bUZ339FlbN+dpA6uT09PSyW7pesVgNhXV1KcUMOgF5cCpa3nJ7unNr2IymI0ltQ30Aizd
TyqZNc0vshhVwE/OK4OsFVTXATO/uu5FZ5fgfXfotCBIJBTXfJuCCwGuOahZo/N+tl7BN2PormEP
4Sg7csHPihaoZXeV5ODuFhbreCOC09dv6Oxz5LyvgZNnbGZ+aEp2YHz6IWdvAyevE94hd1JzLWkB
5HM+DtfD9lIvxOUWOd4ID03KnLvnZ7FQhHD5gyOj/rGpEKT61nY4TDtf90JgshmV99IeJ+eVwKKj
M/PhfINgxOUUBydmQuQgKi3sV0l5JVDgVc0tEfTsrLLq8rpmeiEDjhW4IiLpORBFwcy9PhcLCfok
+ChB2L82/HIXrgdv4VsGawh7p//ZCdszBMym29O/8zB/kml8lKD/E2JBoiAWJApiQaIgFiQKYkGi
IBYkCmJBovAP2aGJ1DgyOQcAAAAASUVORK5CYII=]]></avatar><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><PropertyBindings><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MAccount" sourceName="talk2MAccount" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MDeveloperID" sourceName="talk2MDeveloperID" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MPassword" sourceName="talk2MPassword" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MUsername" sourceName="talk2MUsername" sourceThingName="ConnectorHost"/></PropertyBindings><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="ewonDevicePassword"/><AlertDefinitions name="ewonDeviceUsername"/><AlertDefinitions name="tagReadCache"/><AlertDefinitions name="talk2MAccount"/><AlertDefinitions name="talk2MDeveloperID"/><AlertDefinitions name="talk2MPassword"/><AlertDefinitions name="talk2MUsername"/></AlertConfigurations><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="adm" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="ewonDevicePassword" ordinal="6"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="adm" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="ewonDeviceUsername" ordinal="5"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="false" baseType="STRING" category="" description="" isLocalOnly="false" name="tagReadCache" ordinal="8"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MAccount" ordinal="2"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MDeveloperID" ordinal="7"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MPassword" ordinal="4"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="talk2MUsername" ordinal="3"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadAllTagsLiveGenericService"><ResultType aspect.dataShape="M2Web-Live-Data" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="The name of the Ewon upon which the query for tag data is performed." name="ewonName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" aspect.isRequired="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadBooleanTagLiveGenericService"><ResultType baseType="BOOLEAN" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="3"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadDwordTagLiveGenericService"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="3"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadFloatTagLiveGenericService"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="3"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadIntegerTagLiveGenericService"><ResultType baseType="INTEGER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="3"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadStringTagLiveGenericService"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="3"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="Writes the specified value to the specified boolean tag " isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteBooleanTagGenericService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="Name of boolean tag" name="tagName" ordinal="1"/><FieldDefinition baseType="BOOLEAN" description="Value of tag" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="Writes the specified value to the specified boolean tag " isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteDwordTagGenericService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="Name of boolean tag" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="NUMBER" description="Value of tag" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="Writes the specified value to the specified boolean tag " isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteFloatTagGenericService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="Name of boolean tag" name="tagName" ordinal="1"/><FieldDefinition baseType="NUMBER" description="Value of tag" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="Writes the specified value to the specified boolean tag " isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteIntegerTagGenericService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="Name of boolean tag" name="tagName" ordinal="1"/><FieldDefinition baseType="INTEGER" description="Value of tag" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="Writes the specified value to the specified string tag " isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteStringTagGenericService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="ewonName" ordinal="3"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="Name of boolean tag" name="tagName" ordinal="1"/><FieldDefinition baseType="STRING" description="Value of tag" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="ReadAllTagsLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Create empty InfoTable with M2Web-Live-Data data shape
let m2WebResultInfoTable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "M2Web-Live-Data-" + ewonName + "_InfoTable",
    dataShapeName: "M2Web-Live-Data"
});

// Build EBD command to read instant tag values via M2Web
let m2WebHost = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
let m2WebCommand = 'ParamForm?AST_Param=$dtIV$ftT';
let m2WebCredentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
let m2WebEwonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
let m2WebCompleteURL = encodeURI(m2WebHost + m2WebCommand + m2WebCredentials + m2WebEwonCredentials);
let params = {
    url: m2WebCompleteURL /* STRING */ ,
};

// Perform request to M2Web and recieve response body in the following format:
/*
   "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
   2;"DEMOSTOP";0;0;0;65472
   3;"DEMOSCENARIO";2;0;0;65472
   4;"DEMOINUSE";1;0;0;65472
   5;"LiftStation-A01-FLOW";8770;0;0;65472
   6;"LiftStation-A01-PWR";1;0;0;65472
   7;"LiftStation-B01-FLOW";9160;0;0;65472
   8;"LiftStation-B01-PWR";1;0;0;65472
*/
var rawEbdResult = me.tagReadCache;
if (useCached && me.tagReadCache.length <= 0) {
    logger.warn("A request to read cached tag data was made, but no cached data was found! Reading via M2Web.");
    rawEbdResult = Resources['ContentLoaderFunctions'].GetText(params);
    me.tagReadCache = rawEbdResult;
} else if (!useCached) {
    rawEbdResult = Resources['ContentLoaderFunctions'].GetText(params);
    me.tagReadCache = rawEbdResult;
}

// Split response body in to individual lines (filtering out empty entries)
var rawEbdLines = rawEbdResult.split(/\r\n|\n|\r/).filter(function (x) { return x != ""; });

// Loop through each response body line and add to info table
for (var i = 1, rawEbdLineSegments; i < rawEbdLines.length; i++) {
    // Split line to individual fields
    rawEbdLineSegments = rawEbdLines[i].split(';');

    // Create new info table entry with field values
    let tagIdIndex = 0;
    let tagNameIndex = 1;
    let tagValueIndex = 2;
    let alarmStatusIndex = 3;
    let alarmTypeIndex = 4;
    let qualityIndex = 5;
    let newInfoTableRow = {
        TagId: parseInt(rawEbdLineSegments[tagIdIndex]), // INTEGER
        TagName: rawEbdLineSegments[tagNameIndex], // STRING
        Value: rawEbdLineSegments[tagValueIndex], // STRING
        AlStatus: parseInt(rawEbdLineSegments[alarmStatusIndex]), // INTEGER
        AlType: parseInt(rawEbdLineSegments[alarmTypeIndex]), // INTEGER
        Quality: parseInt(rawEbdLineSegments[qualityIndex]) // INTEGER
    };

    // Add new entry to info table
    m2WebResultInfoTable.AddRow(newInfoTableRow);
}

// Return resulting info table
let result = m2WebResultInfoTable;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadBooleanTagLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Read live tag values for Ewon
let m2WebResultInfoTable = me.ReadAllTagsLiveGenericService({
    ewonName: ewonName /* STRING */,
    useCached: useCached /* BOOLEAN */
});

let m2WebResultInfoTableRowMatch = m2WebResultInfoTable.Find({
    TagName: "\""+tagName+"\""
});

let result = null;
try {
    // Get value and cast to boolean
    let rawValueBooleanInt = parseInt(m2WebResultInfoTableRowMatch.Value);
    result = (rawValueBooleanInt == 1);
    if (rawValueBooleanInt > 1) {
        logger.warn("An invalid boolean value was detected for the tag requested \"" + tagName + "\" on Ewon \"" + ewonName + "\". Will default to false.");
    }
} catch (err) {
    logger.warn("A value could not be found on Ewon \"" + ewonName + "\" for the tag requested \"" + tagName + "\".");
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadDwordTagLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Read live tag values for Ewon
let m2WebResultInfoTable = me.ReadAllTagsLiveGenericService({
    ewonName: ewonName /* STRING */,
    useCached: useCached /* BOOLEAN */
});

let m2WebResultInfoTableRowMatch = m2WebResultInfoTable.Find({
    TagName: "\""+tagName+"\""
});

let result = null;
try {
    // Get value and cast to int (closest equivalent to unsigned int)
    result = parseInt(m2WebResultInfoTableRowMatch.Value);
} catch (err) {
    logger.warn("A value could not be found on Ewon \"" + ewonName + "\" for the tag requested \"" + tagName + "\".");
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadFloatTagLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Read live tag values for Ewon
let m2WebResultInfoTable = me.ReadAllTagsLiveGenericService({
    ewonName: ewonName /* STRING */,
    useCached: useCached /* BOOLEAN */
});

let m2WebResultInfoTableRowMatch = m2WebResultInfoTable.Find({
    TagName: "\""+tagName+"\""
});

let result = null;
try {
    // Get value and cast to float
    result = parseFloat(m2WebResultInfoTableRowMatch.Value);
} catch (err) {
    logger.warn("A value could not be found on Ewon \"" + ewonName + "\" for the tag requested \"" + tagName + "\".");
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadIntegerTagLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Read live tag values for Ewon
let m2WebResultInfoTable = me.ReadAllTagsLiveGenericService({
    ewonName: ewonName /* STRING */,
    useCached: useCached /* BOOLEAN */
});

let m2WebResultInfoTableRowMatch = m2WebResultInfoTable.Find({
    TagName: "\""+tagName+"\""
});

let result = null;
try {
    // Get value and cast to int
    result = parseInt(m2WebResultInfoTableRowMatch.Value);
} catch (err) {
    logger.warn("A value could not be found on Ewon \"" + ewonName + "\" for the tag requested \"" + tagName + "\".");
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadStringTagLiveGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Read live tag values for Ewon
let m2WebResultInfoTable = me.ReadAllTagsLiveGenericService({
    ewonName: ewonName /* STRING */,
    useCached: useCached /* BOOLEAN */
});

let m2WebResultInfoTableRowMatch = m2WebResultInfoTable.Find({
    TagName: "\""+tagName+"\""
});

let result = null;
try {
    // Get raw string value and remove wrapping quotes, if present
    let resultWithQuotes = m2WebResultInfoTableRowMatch.Value;
    result = resultWithQuotes.replace(/^"(.*)"$/, '$1');
} catch (err) {
    logger.warn("A value could not be found on Ewon \"" + ewonName + "\" for the tag requested \"" + tagName + "\".");
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteBooleanTagGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const T2M_SUCCESS_MESSAGE = 'Success Message';
const INDEXOF_NOT_FOUND = -1;

/*
 * Updates a particular boolean tag on the current Ewon device to a new value.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
  // get correct boolean
  var tagValueEwonBool = 0;
  if (tagValue) {
    tagValueEwonBool = 1;
  }
    
  // url construction
  var host = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
  var command = 'UpdateTagForm';
  var tagValues = '?TagName1=' + tagName + '&TagValue1=' + tagValueEwonBool;
  var ewonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
  var completeURL = encodeURI(
    host + command + tagValues + credentials + ewonCredentials
  );
  var params = {
    url: completeURL /* STRING */,
  };

  /*
   * Uses getText instead of getJSON because this API request sometimes returns an HTML file.
   * Failures can be JSON or HTML. Success is always HTML. JSON is always failure.
   */
  var result = Resources['ContentLoaderFunctions'].GetText(params);
  try {
    result = JSON.parse(result);
    // if the return message is JSON then something went wrong
    logger.error(
      'Error calling DataMailbox API in WriteBooleanTagGenericService. Error: ' +
        result['message']
    );
    return;
  } catch (err) {}
  
  // Searching for "Success Message" to confirm a successful write
  if (result.indexOf(T2M_SUCCESS_MESSAGE) === INDEXOF_NOT_FOUND) {
    // The change failed, and returned HTML
    logger.error('Write failed in WriteBooleanTagGenericService: ' + result);
    return;
  }
  /*
   * Now the function reads back the new value to double check.
   * This command returns all instantaneous tag values.
   */
  command = 'ParamForm?AST_Param=$dtIV$ftT';
  completeURL = encodeURI(host + command + credentials + ewonCredentials);
  params = {
    url: completeURL /* STRING */,
  };
  // Returns a body with tag values and information in the following format:
  /*
    "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
    2;"DEMOSTOP";0;0;0;65472
    3;"DEMOSCENARIO";2;0;0;65472
    4;"DEMOINUSE";1;0;0;65472
    5;"LiftStation-A01-FLOW";8770;0;0;65472
    6;"LiftStation-A01-PWR";1;0;0;65472
    7;"LiftStation-B01-FLOW";9160;0;0;65472
    8;"LiftStation-B01-PWR";1;0;0;65472
    */
  result = Resources['ContentLoaderFunctions'].GetText(params);
  var start = result.indexOf('"' + tagName + '"');
  /*
   * start takes us to the index of the tagName occurrence.
   * The offset of 3 accounts for the two " and the one ; before the tag value.
   * tagName.length takes the pointer to the end of the tagName.
   * start + 3 + tagName.length() will point to the first character of value.
   * tagValue.length() will then grab the entire tagValue.
   */
  const tagNameOffset = 3;
  newValue = result.substring(
    start + tagNameOffset + tagName.length,
    start + tagNameOffset + tagName.length + tagValue.length
  );
  newValueBoolean = false;
  if (newValue.trim() == "1") {
    newValueBoolean = true;
  }
    
  if (tagValueEwonBool == newValueBoolean) {
    logger.debug('The value of ' + tagName + ' changed to ' + tagValue + '.');
  } else {
    logger.error(
      'Failed to change the value of ' + tagName + ' to ' + tagValue + '.'
    );
    logger.debug('newValue: ' + tagValue + ', onWriteBack: ' + newValue);
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteDwordTagGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const T2M_SUCCESS_MESSAGE = 'Success Message';
const INDEXOF_NOT_FOUND = -1;

/*
 * Updates a particular DWORD tag on the current Ewon device to a new value.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
  // url construction
  var host = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
  var command = 'UpdateTagForm';
  var tagValues = '?TagName1=' + tagName + '&TagValue1=' + tagValue;
  var ewonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
  var completeURL = encodeURI(
    host + command + tagValues + credentials + ewonCredentials
  );
  var params = {
    url: completeURL /* STRING */,
  };

  /*
   * Uses getText instead of getJSON because this API request sometimes returns an HTML file.
   * Failures can be JSON or HTML. Success is always HTML. JSON is always failure.
   */
  var result = Resources['ContentLoaderFunctions'].GetText(params);
  try {
    result = JSON.parse(result);
    // if the return message is JSON then something went wrong
    logger.error(
      'Error calling DataMailbox API in WriteDwordTagGenericService. Error: ' +
        result['message']
    );
    return;
  } catch (err) {}
  
  // Searching for "Success Message" to confirm a successful write
  if (result.indexOf(T2M_SUCCESS_MESSAGE) === INDEXOF_NOT_FOUND) {
    // The change failed, and returned HTML
    logger.error('Write failed in WriteDwordTagGenericService: ' + result);
    return;
  }
  /*
   * Now the function reads back the new value to double check.
   * This command returns all instantaneous tag values.
   */
  command = 'ParamForm?AST_Param=$dtIV$ftT';
  completeURL = encodeURI(host + command + credentials + ewonCredentials);
  params = {
    url: completeURL /* STRING */,
  };
  // Returns a body with tag values and information in the following format:
  /*
    "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
    2;"DEMOSTOP";0;0;0;65472
    3;"DEMOSCENARIO";2;0;0;65472
    4;"DEMOINUSE";1;0;0;65472
    5;"LiftStation-A01-FLOW";8770;0;0;65472
    6;"LiftStation-A01-PWR";1;0;0;65472
    7;"LiftStation-B01-FLOW";9160;0;0;65472
    8;"LiftStation-B01-PWR";1;0;0;65472
    */
  result = Resources['ContentLoaderFunctions'].GetText(params);
  var start = result.indexOf('"' + tagName + '"');
  /*
   * start takes us to the index of the tagName occurrence.
   * The offset of 3 accounts for the two " and the one ; before the tag value.
   * tagName.length takes the pointer to the end of the tagName.
   * start + 3 + tagName.length() will point to the first character of value.
   * tagValue.length() will then grab the entire tagValue.
   */
  const tagNameOffset = 3;
  newValue = result.substring(
    start + tagNameOffset + tagName.length,
    start + tagNameOffset + tagName.length + tagValue.length
  );
  newValueInt = parseInt(newValue);
  if (tagValue == newValueInt) {
    logger.debug('The value of ' + tagName + ' changed to ' + tagValue + '.');
  } else {
    logger.error(
      'Failed to change the value of ' + tagName + ' to ' + tagValue + '.'
    );
    logger.debug('newValue: ' + tagValue + ', onWriteBack: ' + newValue);
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteFloatTagGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const T2M_SUCCESS_MESSAGE = 'Success Message';
const INDEXOF_NOT_FOUND = -1;

/*
 * Updates a particular float tag on the current Ewon device to a new value.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
  // url construction
  var host = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
  var command = 'UpdateTagForm';
  var tagValues = '?TagName1=' + tagName + '&TagValue1=' + tagValue;
  var ewonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
  var completeURL = encodeURI(
    host + command + tagValues + credentials + ewonCredentials
  );
  var params = {
    url: completeURL /* STRING */,
  };

  /*
   * Uses getText instead of getJSON because this API request sometimes returns an HTML file.
   * Failures can be JSON or HTML. Success is always HTML. JSON is always failure.
   */
  var result = Resources['ContentLoaderFunctions'].GetText(params);
  try {
    result = JSON.parse(result);
    // if the return message is JSON then something went wrong
    logger.error(
      'Error calling DataMailbox API in WriteFloatTagGenericService. Error: ' +
        result['message']
    );
    return;
  } catch (err) {}
  
  // Searching for "Success Message" to confirm a successful write
  if (result.indexOf(T2M_SUCCESS_MESSAGE) === INDEXOF_NOT_FOUND) {
    // The change failed, and returned HTML
    logger.error('Write failed in WriteFloatTagGenericService: ' + result);
    return;
  }
  /*
   * Now the function reads back the new value to double check.
   * This command returns all instantaneous tag values.
   */
  command = 'ParamForm?AST_Param=$dtIV$ftT';
  completeURL = encodeURI(host + command + credentials + ewonCredentials);
  params = {
    url: completeURL /* STRING */,
  };
  // Returns a body with tag values and information in the following format:
  /*
    "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
    2;"DEMOSTOP";0;0;0;65472
    3;"DEMOSCENARIO";2;0;0;65472
    4;"DEMOINUSE";1;0;0;65472
    5;"LiftStation-A01-FLOW";8770;0;0;65472
    6;"LiftStation-A01-PWR";1;0;0;65472
    7;"LiftStation-B01-FLOW";9160;0;0;65472
    8;"LiftStation-B01-PWR";1;0;0;65472
    */
  result = Resources['ContentLoaderFunctions'].GetText(params);
  var start = result.indexOf('"' + tagName + '"');
  /*
   * start takes us to the index of the tagName occurrence.
   * The offset of 3 accounts for the two " and the one ; before the tag value.
   * tagName.length takes the pointer to the end of the tagName.
   * start + 3 + tagName.length() will point to the first character of value.
   * tagValue.length() will then grab the entire tagValue.
   */
  const tagNameOffset = 3;
  newValue = result.substring(
    start + tagNameOffset + tagName.length,
    start + tagNameOffset + tagName.length + tagValue.length
  );
  newValueFloat = parseFloat(newValue);
  if (tagValue == newValueFloat) {
    logger.debug('The value of ' + tagName + ' changed to ' + tagValue + '.');
  } else {
    logger.error(
      'Failed to change the value of ' + tagName + ' to ' + tagValue + '.'
    );
    logger.debug('newValue: ' + tagValue + ', onWriteBack: ' + newValue);
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteIntegerTagGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const T2M_SUCCESS_MESSAGE = 'Success Message';
const INDEXOF_NOT_FOUND = -1;

/*
 * Updates a particular integer tag on the current Ewon device to a new value.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
  // url construction
  var host = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
  var command = 'UpdateTagForm';
  var tagValues = '?TagName1=' + tagName + '&TagValue1=' + tagValue;
  var ewonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
  var completeURL = encodeURI(
    host + command + tagValues + credentials + ewonCredentials
  );
  var params = {
    url: completeURL /* STRING */,
  };

  /*
   * Uses getText instead of getJSON because this API request sometimes returns an HTML file.
   * Failures can be JSON or HTML. Success is always HTML. JSON is always failure.
   */
  var result = Resources['ContentLoaderFunctions'].GetText(params);
  try {
    result = JSON.parse(result);
    // if the return message is JSON then something went wrong
    logger.error(
      'Error calling DataMailbox API in WriteIntegerTagGenericService. Error: ' +
        result['message']
    );
    return;
  } catch (err) {}
  
  // Searching for "Success Message" to confirm a successful write
  if (result.indexOf(T2M_SUCCESS_MESSAGE) === INDEXOF_NOT_FOUND) {
    // The change failed, and returned HTML
    logger.error('Write failed in WriteIntegerTagGenericService: ' + result);
    return;
  }
  /*
   * Now the function reads back the new value to double check.
   * This command returns all instantaneous tag values.
   */
  command = 'ParamForm?AST_Param=$dtIV$ftT';
  completeURL = encodeURI(host + command + credentials + ewonCredentials);
  params = {
    url: completeURL /* STRING */,
  };
  // Returns a body with tag values and information in the following format:
  /*
    "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
    2;"DEMOSTOP";0;0;0;65472
    3;"DEMOSCENARIO";2;0;0;65472
    4;"DEMOINUSE";1;0;0;65472
    5;"LiftStation-A01-FLOW";8770;0;0;65472
    6;"LiftStation-A01-PWR";1;0;0;65472
    7;"LiftStation-B01-FLOW";9160;0;0;65472
    8;"LiftStation-B01-PWR";1;0;0;65472
    */
  result = Resources['ContentLoaderFunctions'].GetText(params);
  var start = result.indexOf('"' + tagName + '"');
  /*
   * start takes us to the index of the tagName occurrence.
   * The offset of 3 accounts for the two " and the one ; before the tag value.
   * tagName.length takes the pointer to the end of the tagName.
   * start + 3 + tagName.length() will point to the first character of value.
   * tagValue.length() will then grab the entire tagValue.
   */
  const tagNameOffset = 3;
  newValue = result.substring(
    start + tagNameOffset + tagName.length,
    start + tagNameOffset + tagName.length + tagValue.length
  );
  newValueInt = parseInt(newValue);
  if (tagValue == newValueInt) {
    logger.debug('The value of ' + tagName + ' changed to ' + tagValue + '.');
  } else {
    logger.error(
      'Failed to change the value of ' + tagName + ' to ' + tagValue + '.'
    );
    logger.debug('newValue: ' + tagValue + ', onWriteBack: ' + newValue);
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteStringTagGenericService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[const T2M_SUCCESS_MESSAGE = 'Success Message';
const INDEXOF_NOT_FOUND = -1;

/*
 * Updates a particular string tag on the current Ewon device to a new value.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// wrapper function for early returns
function run() {
  // url construction
  var host = 'https://m2web.talk2m.com/t2mapi/get/' + ewonName + '/rcgi.bin/';
  var command = 'UpdateTagForm';
  var tagValues = '?TagName1=' + tagName + '&TagValue1=' + tagValue;
  var ewonCredentials =
    '&t2mdeviceusername=' + me.ewonDeviceUsername + '&t2mdevicepassword=' + me.ewonDevicePassword;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;
  var completeURL = encodeURI(
    host + command + tagValues + credentials + ewonCredentials
  );
  var params = {
    url: completeURL /* STRING */,
  };

  /*
   * Uses getText instead of getJSON because this API request sometimes returns an HTML file.
   * Failures can be JSON or HTML. Success is always HTML. JSON is always failure.
   */
  var result = Resources['ContentLoaderFunctions'].GetText(params);
  try {
    result = JSON.parse(result);
    // if the return message is JSON then something went wrong
    logger.error(
      'Error calling DataMailbox API in WriteStringTagGenericService. Error: ' +
        result['message']
    );
    return;
  } catch (err) {}
  
  // Searching for "Success Message" to confirm a successful write
  if (result.indexOf(T2M_SUCCESS_MESSAGE) === INDEXOF_NOT_FOUND) {
    // The change failed, and returned HTML
    logger.error('Write failed in WriteStringTagGenericService: ' + result);
    return;
  }
  /*
   * Now the function reads back the new value to double check.
   * This command returns all instantaneous tag values.
   */
  command = 'ParamForm?AST_Param=$dtIV$ftT';
  completeURL = encodeURI(host + command + credentials + ewonCredentials);
  params = {
    url: completeURL /* STRING */,
  };
  // Returns a body with tag values and information in the following format:
  /*
    "TagId";"TagName";"Value";"AlStatus";"AlType";"Quality"
    2;"DEMOSTOP";0;0;0;65472
    3;"DEMOSCENARIO";2;0;0;65472
    4;"DEMOINUSE";1;0;0;65472
    5;"LiftStation-A01-FLOW";8770;0;0;65472
    6;"LiftStation-A01-PWR";1;0;0;65472
    7;"LiftStation-B01-FLOW";9160;0;0;65472
    8;"LiftStation-B01-PWR";1;0;0;65472
    */
  result = Resources['ContentLoaderFunctions'].GetText(params);
  var start = result.indexOf('"' + tagName + '"');
  /*
   * start takes us to the index of the tagName occurrence.
   * The offset of 4 accounts for the quotes and semicolon before the tag value.
   * tagName.length takes the pointer to the end of the tagName.
   * start + 4 + tagName.length() will point to the first character of value.
   * tagValue.length() will then grab the entire tagValue.
   */
  const tagNameOffset = 4;
  newValue = result.substring(
    start + tagNameOffset + tagName.length,
    start + tagNameOffset + tagName.length + tagValue.length
  );
  if (tagValue == newValue) {
    logger.debug('The value of ' + tagName + ' changed to ' + tagValue + '.');
  } else {
    logger.error(
      'Failed to change the value of ' + tagName + ' to ' + tagValue + '.'
    );
    logger.debug('newValue: ' + tagValue + ', onWriteBack: ' + newValue);
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><ImplementedShapes/><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, avatar : updated&#10;" timestamp="2020-10-02T19:25:08.754Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-02T19:26:27.956Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : projectName : updated&#10;" timestamp="2020-10-02T19:26:59.936Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MAccount : added&#10;" timestamp="2020-10-05T18:17:58.659Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MUsername : added, talk2MAccount : updated, talk2MPassword : added&#10;" timestamp="2020-10-05T18:19:14.319Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : ewonDeviceUsername : added, ewonDevicePassword : added&#10;" timestamp="2020-10-05T18:21:27.373Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service added&#10;" timestamp="2020-10-05T18:29:16.198Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : input parameter tagName added, inputs updated, input parameter tagValue added, inputs updated&#10;" timestamp="2020-10-05T18:33:47.120Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MDeveloperID : added&#10;" timestamp="2020-10-05T18:37:18.647Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service added&#10;" timestamp="2020-10-05T18:40:13.217Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WakeEwonDevice : service added&#10;" timestamp="2020-10-05T18:41:10.938Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-07T15:11:29.771Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service deleted&#10;UpdateEwonTagValue : service deleted&#10;WakeEwonDevice : service deleted&#10;" timestamp="2020-10-08T14:35:24.416Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-08T14:44:22.789Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : ewonDeviceUsername : updated, ewonDevicePassword : updated&#10;" timestamp="2020-10-08T14:51:43.315Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-08T15:15:17.287Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-08T15:17:00.119Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:23:34.868Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:24:13.004Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:25:11.736Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:25:11.752Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:43:29.037Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:52:22.830Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MAccount : updated, talk2MDeveloperID : updated, talk2MPassword : updated, talk2MUsername : updated&#10;" timestamp="2020-10-12T13:55:04.910Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2020-10-15T14:40:56.102Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-11-30T13:22:13.329Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2021-04-06T13:41:54.519Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service added&#10;" timestamp="2021-04-08T18:29:44.134Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service added, input parameter tagValue updated, inputs updated, description updated&#10;" timestamp="2021-04-08T18:30:18.973Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-08T18:44:21.540Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-08T18:59:33.737Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service updated&#10;" timestamp="2021-04-13T12:54:19.243Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service updated&#10;" timestamp="2021-04-14T14:10:56.078Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : service updated&#10;" timestamp="2021-04-14T14:19:44.015Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service updated&#10;" timestamp="2021-04-14T14:20:24.366Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service updated&#10;" timestamp="2021-04-27T12:36:03.256Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service updated&#10;" timestamp="2021-04-27T12:41:21.055Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service added&#10;WriteBooleanTag : service deleted&#10;WriteFloatTagGenericService : service added&#10;WriteFloatTag : service deleted&#10;WriteIntegerTagGenericService : service added&#10;WriteIntegerTag : service deleted&#10;WriteStringTagGenericService : service added&#10;WriteStringTag : service deleted&#10;" timestamp="2021-04-27T13:47:28.847Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : input parameter ewonName added, inputs updated&#10;" timestamp="2021-04-27T13:49:33.386Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTagGenericService : input parameter ewonName added, inputs updated&#10;" timestamp="2021-04-27T13:49:44.151Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : input parameter ewonName added, inputs updated&#10;" timestamp="2021-04-27T13:49:57.836Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTagGenericService : input parameter ewonName added, inputs updated&#10;" timestamp="2021-04-27T13:50:09.942Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteDwordTagGenericService : service added, input parameter tagValue updated, inputs updated, input parameter tagName updated, inputs updated&#10;" timestamp="2021-04-27T14:17:07.730Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2021-04-30T12:45:37.581Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2021-04-30T12:45:45.633Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-04-30T12:45:52.335Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteDwordTagGenericService : service updated&#10;" timestamp="2021-04-30T12:46:00.877Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTagGenericService : service updated&#10;" timestamp="2021-04-30T12:46:07.096Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-05-03T14:02:20.982Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2021-05-03T14:02:20.992Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-05T14:32:34.852Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-05T14:32:52.754Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteDwordTagGenericService : service updated&#10;" timestamp="2021-05-05T14:33:06.438Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTagGenericService : service updated&#10;" timestamp="2021-05-05T14:33:18.944Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2021-05-05T14:33:29.190Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTagGenericService : service updated&#10;" timestamp="2021-05-05T16:47:35.616Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTagGenericService : service updated&#10;" timestamp="2021-05-05T16:50:23.563Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTagGenericService : service updated&#10;" timestamp="2021-05-05T16:55:35.297Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTagGenericService : service updated&#10;" timestamp="2021-05-05T16:56:06.861Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2021-05-07T12:36:34.716Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-11T13:44:51.152Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-11T13:45:31.496Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2021-05-11T14:58:35.595Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service added&#10;" timestamp="2021-05-12T13:59:40.811Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T14:11:48.241Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : input parameter ewonName added, inputs updated&#10;" timestamp="2021-05-12T14:14:40.834Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : output updated&#10;" timestamp="2021-05-12T14:21:05.445Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T14:52:58.146Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:06:22.467Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:31:06.559Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:32:29.777Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:32:37.668Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:33:56.690Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:34:02.254Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:34:30.766Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:36:15.376Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:37:20.263Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:38:21.306Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:38:23.913Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:39:33.918Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:39:35.375Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:44:57.171Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:44:58.751Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:46:21.410Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:46:24.344Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:47:01.727Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:47:05.959Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service added&#10;" timestamp="2021-05-12T15:49:43.215Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:49:45.138Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:50:33.523Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:50:34.941Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:51:58.959Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:52:24.191Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:53:19.024Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:53:20.331Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:53:45.637Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T15:53:47.063Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : output updated&#10;" timestamp="2021-05-12T15:58:20.498Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T15:58:57.970Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:00:51.315Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:01:34.331Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:02:26.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:02:44.249Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;ReadBooleanTagLiveGenericService : service added, output updated&#10;" timestamp="2021-05-12T16:06:26.131Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:07:52.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLiveGenericService : service added&#10;" timestamp="2021-05-12T16:13:45.769Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLiveGenericService : output updated&#10;" timestamp="2021-05-12T16:13:53.503Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLiveGenericService : service added, output updated&#10;" timestamp="2021-05-12T16:16:17.407Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLiveGenericService : service added, output updated&#10;" timestamp="2021-05-12T16:20:24.871Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLiveGenericService : service updated&#10;" timestamp="2021-05-12T16:20:40.323Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : output updated&#10;" timestamp="2021-05-12T16:21:02.143Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2021-05-13T12:37:04.336Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-13T12:37:14.087Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-13T12:37:22.870Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteDwordTagGenericService : service updated&#10;" timestamp="2021-05-13T12:37:29.962Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : tagReadCache : added&#10;" timestamp="2021-05-14T12:55:07.072Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T12:56:40.909Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-14T12:59:55.554Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated, input parameter useCached updated, inputs updated&#10;" timestamp="2021-05-14T13:00:26.122Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;ReadBooleanTagLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T13:00:44.613Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;" timestamp="2021-05-14T13:01:16.559Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;ReadDwordTagLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T13:01:39.788Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLiveGenericService : service updated&#10;ReadFloatTagLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T13:02:23.300Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLiveGenericService : service updated&#10;ReadIntegerTagLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T13:02:47.969Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLiveGenericService : service updated&#10;" timestamp="2021-05-14T13:03:18.728Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLiveGenericService : service updated&#10;ReadStringTagLiveGenericService : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-14T13:03:40.897Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-14T13:25:56.234Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLiveGenericService : service updated&#10;" timestamp="2021-05-17T18:00:18.116Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-17T18:12:41.959Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-17T18:13:05.946Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTagGenericService : service updated&#10;" timestamp="2021-05-17T18:15:18.044Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T12:37:21.463Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T12:37:45.862Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T12:38:45.106Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T12:39:20.194Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T12:39:42.752Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T14:32:36.316Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLiveGenericService : service updated&#10;" timestamp="2021-05-18T14:40:29.265Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.445Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2022-07-20T18:38:26.256Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTagGenericService : service updated&#10;" timestamp="2022-07-20T18:43:19.914Z" user="Administrator"/></ConfigurationChanges></ThingTemplate><ThingTemplate baseThingTemplate="GenericEwonDevice" description="The base thing template which provides properties and services for Ewon devices that have been connected to Thingworx using the Ewon Thingworx Connector Talk2M data path." documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="GenericEwonDeviceValueStream" lastModifiedDate="2022-06-07T13:16:21.798Z" name="GenericEwonDeviceTalk2M" projectName="EwonThingworxConnector" tags="" thingPackage="" valueStream="GenericEwonDeviceValueStream"><Owner name="Administrator" type="User"/><avatar><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAGkklEQVR4Xu1WaVBTVxS+oFLHsf3R
RcYpSB1xA3RcoVSxglMsgRAsqARZzFggLIpIUcQdgciutiCLbC4IyCqBsovsBGQzrFFAlkhkUfaE
Jel5ecCAVeKPTvVHvjlJ7rvnu+9+95xz7w0SfGZA73Z8aogFiYJYkCiIBYmCWJAoiAWJgliQKHzG
gqam+JNT8MWHzzzj8+fw/3vwhe/n4z+zgmYePwSMP8tZuD0XeP+C3nfnxQThMWDUNZPP+mrZ07RO
XdOyx4xw6pqmnbu+k3f/4ODsgA8ph+i+2zVnne/14p3M522xWfmphWUDQ8PAR7hWTv9baYIlUiAh
5cNIxRCpYN8SqmS0RX/dwZMjY2Mjo2NDo6OTk9grhrnckTEuvsrhsbGB4eHxiUno547zRrncMR4P
DBowBJ8Yl4V5x4ReLtYYGhnFXjU6Gpac5Roaczc1p7CKCT0InyOtuBJtM5BSM07KK+vo7mllc152
94C1dHX3DwzlVTJlCJY/HDje2sVh9/bJaVvutb4Co+6k5slqULaZOoEm7/uP5Ek2K3WspbWtpAlU
GZLtKqIV5ao/b3wcJLmEPlyjZ4t5CVQwWV3bVdpW1p4hb4YGI1KyguLTEnKLHlfUYIImhIL8HtAl
lEgriVSoaXxZc5FbXguhQjsOt3N6/KJT0GpNeX072AD7T7ojmX1Uj5AaVgtSguiS1xrYK5L/UCI7
yujaAB9t0+/g9BTXNiIFIlIhrz0IXkclI8fvidaYV/lwG5tTzmyKyy58kP6Y0/cGSxkeoWNugWjT
AWltqqVHiJVnCNUj2NrrtrlrgFt4HJBKmc2SqkZLfzarbm5VOXYeKZI2GZ+pYbV+te+YxFaD2udt
wUlZkgpEOb3j/YMD+Bp8o1Ik4YUEC8iU171kSQXd1b8dh0DiXlpEvKSSHvB732L8weGRmbULsBqC
kP5kfhEkS6gaIUXdadush2Q1CPbuQKpofI5+JH+z3xLyslz9qAzJRoHsAFlACrqbjE8DwYIWhNYR
1CwvCWZKleJ6C63XUaY4Q9vMxR+t08azjHuNLt4E7x7qZZgaThZcCl5q2C57MzgoS7JBmw9A8Cvq
WSXPmhh1rPJ6VmltY3v3ayA0tHYs3mX8tab5WgO7LaZnqJ63v1Q322xyGm0ketxNAoKq+QW0Xvuo
iz8UAJc3MTE5udviEkxpeuUv8O6knIO25bVgvlAQYAfFGW0g/u4ehEkUpmgWmCAI/hd7TNBW/dyK
2rm+WUCNL9egSKmZQkjcwuPdIxMha4t3myxXN4MSgT2IVYyCbkB8Bs7njfNkidaSiro+USnjE+Pf
alkA/0Z0Ku591de/goD1+EbR4RHUz04kwAXdz8iX2G6wTJ3y58M02G6PCirohU9TiyqT8xiVjS+A
0PW67zstC6k9RxerGLLaO93CE5ZsP7RImax32gu8UGFLdptIqRpdConNKK0GC0zIXKZBQUp6OeU1
rE72kl3Gi1TImaVV+JSlzCbYzjA8vQTreU+Ekp6UIQUdbB9t0EFrCdO2gYhWqJ31vw8Edk/fUgih
nOZGQwd4tPMJR3K/ADk+txRSUNHIwk4vJT1s+JpfkfyvUE+QQXn9E3DYBCdlIhkNpGzY3N4lTBf/
Zkwqkt2Hdh5idbAFwitrniAoJXjp3fQnl4Ni3CISZo0WmeASFF3f0o7zQpKyacExBdX10M6vqqOF
xN5KyODPHPx/F1d6RiZ6R6Vcj07ziaJDpgLjMnqEOwji4REaF5yYNTOjoKimweN2XEB8OpfHE/zr
7vio2z6bUZ339FlbN+dpA6uT09PSyW7pesVgNhXV1KcUMOgF5cCpa3nJ7unNr2IymI0ltQ30Aizd
TyqZNc0vshhVwE/OK4OsFVTXATO/uu5FZ5fgfXfotCBIJBTXfJuCCwGuOahZo/N+tl7BN2PormEP
4Sg7csHPihaoZXeV5ODuFhbreCOC09dv6Oxz5LyvgZNnbGZ+aEp2YHz6IWdvAyevE94hd1JzLWkB
5HM+DtfD9lIvxOUWOd4ID03KnLvnZ7FQhHD5gyOj/rGpEKT61nY4TDtf90JgshmV99IeJ+eVwKKj
M/PhfINgxOUUBydmQuQgKi3sV0l5JVDgVc0tEfTsrLLq8rpmeiEDjhW4IiLpORBFwcy9PhcLCfok
+ChB2L82/HIXrgdv4VsGawh7p//ZCdszBMym29O/8zB/kml8lKD/E2JBoiAWJApiQaIgFiQKYkGi
IBYkCmJBovAP2aGJ1DgyOQcAAAAASUVORK5CYII=]]></avatar><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><PropertyBindings><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MAccount" sourceName="talk2MAccount" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.tagAddress="" name="talk2MDeveloperID" sourceName="talk2MDeveloperID" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.tagAddress="" name="talk2MPassword" sourceName="talk2MPassword" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MUsername" sourceName="talk2MUsername" sourceThingName="ConnectorHost"/></PropertyBindings><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ThingShape><PropertyDefinitions/><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadAllTagsLive"><ResultType aspect.dataShape="M2Web-Live-Data" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadBooleanTagLive"><ResultType baseType="BOOLEAN" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadDwordTagLive"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadFloatTagLive"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadIntegerTagLive"><ResultType baseType="INTEGER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadStringTagLive"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="Talk2M" description="Sends the current Ewon device to offline mode using Talk2M" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="SendEwonOffline"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="Talk2M" description="Wakes the current Ewon device via Talk2M." isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WakeEwonDevice"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteBooleanTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="BOOLEAN" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteDwordTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="NUMBER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteFloatTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="NUMBER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteIntegerTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="INTEGER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteStringTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="ReadAllTagsLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadAllTagsLiveGenericService({
	ewonName: me.name /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadBooleanTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadBooleanTagLiveGenericService({
	ewonName: me.name /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadDwordTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadDwordTagLiveGenericService({
	ewonName: me.name /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadFloatTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadFloatTagLiveGenericService({
	ewonName: me.name /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadIntegerTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadIntegerTagLiveGenericService({
	ewonName: me.name /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadStringTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadStringTagLiveGenericService({
	ewonName: me.name /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="SendEwonOffline"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Sets the current Ewon device to offline mode via Talk2M.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// simple wrapper function to facilitate early returns
function run() {
  var host = 'https://m2web.talk2m.com/t2mapi/';
  var command = 'getewon?name=' + me.name;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;

  var params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends API request to DataMailbox
  var result = Resources['ContentLoaderFunctions'].GetJSON(params);
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in SendEwonOffline. Error: ' +
        result['message']
    );
    return;
  }
  var ewon = result.ewon;
  var status = ewon.status;
    command = 'sendoffline?name=' + me.name;

  params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends the api request to DataMailBox
  result = Resources['ContentLoaderFunctions'].GetJSON(params);
  logger.warn(JSON.stringify(result));
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in SendEwonOffline. Error: ' +
        result['message']
    );
    return;
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WakeEwonDevice"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Wakes up the current Ewon device and sets it to online mode via Talk2M.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// simple wrapper function to facilitate early returns
function run() {
  var host = 'https://m2web.talk2m.com/t2mapi/';
  var command = 'getewon?name=' + me.name;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;

  var params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends API request to DataMailbox
  var result = Resources['ContentLoaderFunctions'].GetJSON(params);
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in WakeEwonDevice. Error: ' +
        result['message']
    );
    return;
  }
  var ewon = result.ewon;
  var status = ewon.status;
    command = 'wakeup?name=' + me.name;

  params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends the api request to DataMailBox
  result = Resources['ContentLoaderFunctions'].GetJSON(params);
  logger.warn(JSON.stringify(result));
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in WakeEwonDevice. Error: ' +
        result['message']
    );
    return;
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteBooleanTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteBooleanTagGenericService({
	ewonName: me.name /* STRING */,
	tagValue: tagValue /* BOOLEAN */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteDwordTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteDwordTagGenericService({
	ewonName: me.name /* STRING */,
	tagValue: tagValue /* NUMBER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteFloatTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteFloatTagGenericService({
	ewonName: me.name /* STRING */,
	tagValue: tagValue /* NUMBER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteIntegerTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteIntegerTagGenericService({
	ewonName: me.name /* STRING */,
	tagValue: tagValue /* INTEGER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteStringTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteStringTagGenericService({
	ewonName: me.name /* STRING */,
	tagValue: tagValue /* STRING */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><ImplementedShapes/><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, description : updated&#10;" timestamp="2020-10-08T14:34:02.149Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T14:40:53.581Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T14:41:34.033Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WakeEwonDevice : service updated&#10;" timestamp="2020-10-08T14:42:23.074Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-08T15:17:58.172Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:23:34.868Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:24:13.004Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:25:11.736Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:25:11.752Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T15:35:17.087Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T15:35:24.697Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-08T15:35:30.672Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:43:29.037Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:52:22.830Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-12T12:14:19.410Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-12T12:14:39.382Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-12T12:15:34.968Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WakeEwonDevice : service updated&#10;" timestamp="2020-10-12T12:16:01.092Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:04:30.450Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:04:39.110Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:05:29.292Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:13:36.899Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-11-30T13:22:13.292Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2021-04-06T13:41:54.500Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service deleted&#10;WriteBooleanTag : service added&#10;" timestamp="2021-04-27T14:07:27.553Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T14:07:53.943Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service updated&#10;" timestamp="2021-04-27T14:08:01.330Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : service updated&#10;WriteIntegerTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T14:09:07.447Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : service updated&#10;WriteStringTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T14:09:44.663Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service updated&#10;WriteDwordTag : service added&#10;" timestamp="2021-04-27T14:18:49.848Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MUsername : updated&#10;" timestamp="2021-04-27T14:36:51.323Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-05-03T14:02:20.978Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2021-05-03T14:02:20.997Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service added&#10;" timestamp="2021-05-12T16:33:11.696Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : category updated&#10;" timestamp="2021-05-12T16:33:21.725Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated, output updated&#10;" timestamp="2021-05-12T16:34:32.591Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T16:34:34.498Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2021-05-12T16:34:35.165Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated&#10;ReadBooleanTagLive : service added&#10;" timestamp="2021-05-12T16:35:24.205Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLive : service updated&#10;" timestamp="2021-05-12T16:35:36.056Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:36:03.877Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLive : service added&#10;" timestamp="2021-05-12T16:36:23.276Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLive : service updated&#10;ReadIntegerTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:36:53.636Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLive : service updated&#10;ReadStringTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:37:21.864Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:50:26.589Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated&#10;ReadBooleanTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:50:45.418Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLive : service updated&#10;ReadDwordTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:51:00.916Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLive : service updated&#10;ReadFloatTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:51:21.978Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLive : service updated&#10;ReadIntegerTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:51:45.018Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLive : service updated&#10;ReadStringTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T12:52:17.967Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.404Z" user="Administrator"/></ConfigurationChanges></ThingTemplate><ThingTemplate baseThingTemplate="GenericEwonDevice" description="The base thing template which provides properties and services for Ewon devices that have been connected to Thingworx using the Ewon Thingworx Connector direct data path." documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="GenericEwonDeviceValueStream" lastModifiedDate="2022-06-07T13:16:21.909Z" name="GenericEwonDeviceDirect" projectName="EwonThingworxConnector" tags="" thingPackage="" valueStream="GenericEwonDeviceValueStream"><Owner name="Administrator" type="User"/><avatar><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAGkklEQVR4Xu1WaVBTVxS+oFLHsf3R
RcYpSB1xA3RcoVSxglMsgRAsqARZzFggLIpIUcQdgciutiCLbC4IyCqBsovsBGQzrFFAlkhkUfaE
Jel5ecCAVeKPTvVHvjlJ7rvnu+9+95xz7w0SfGZA73Z8aogFiYJYkCiIBYmCWJAoiAWJgliQKHzG
gqam+JNT8MWHzzzj8+fw/3vwhe/n4z+zgmYePwSMP8tZuD0XeP+C3nfnxQThMWDUNZPP+mrZ07RO
XdOyx4xw6pqmnbu+k3f/4ODsgA8ph+i+2zVnne/14p3M522xWfmphWUDQ8PAR7hWTv9baYIlUiAh
5cNIxRCpYN8SqmS0RX/dwZMjY2Mjo2NDo6OTk9grhrnckTEuvsrhsbGB4eHxiUno547zRrncMR4P
DBowBJ8Yl4V5x4ReLtYYGhnFXjU6Gpac5Roaczc1p7CKCT0InyOtuBJtM5BSM07KK+vo7mllc152
94C1dHX3DwzlVTJlCJY/HDje2sVh9/bJaVvutb4Co+6k5slqULaZOoEm7/uP5Ek2K3WspbWtpAlU
GZLtKqIV5ao/b3wcJLmEPlyjZ4t5CVQwWV3bVdpW1p4hb4YGI1KyguLTEnKLHlfUYIImhIL8HtAl
lEgriVSoaXxZc5FbXguhQjsOt3N6/KJT0GpNeX072AD7T7ojmX1Uj5AaVgtSguiS1xrYK5L/UCI7
yujaAB9t0+/g9BTXNiIFIlIhrz0IXkclI8fvidaYV/lwG5tTzmyKyy58kP6Y0/cGSxkeoWNugWjT
AWltqqVHiJVnCNUj2NrrtrlrgFt4HJBKmc2SqkZLfzarbm5VOXYeKZI2GZ+pYbV+te+YxFaD2udt
wUlZkgpEOb3j/YMD+Bp8o1Ik4YUEC8iU171kSQXd1b8dh0DiXlpEvKSSHvB732L8weGRmbULsBqC
kP5kfhEkS6gaIUXdadush2Q1CPbuQKpofI5+JH+z3xLyslz9qAzJRoHsAFlACrqbjE8DwYIWhNYR
1CwvCWZKleJ6C63XUaY4Q9vMxR+t08azjHuNLt4E7x7qZZgaThZcCl5q2C57MzgoS7JBmw9A8Cvq
WSXPmhh1rPJ6VmltY3v3ayA0tHYs3mX8tab5WgO7LaZnqJ63v1Q322xyGm0ketxNAoKq+QW0Xvuo
iz8UAJc3MTE5udviEkxpeuUv8O6knIO25bVgvlAQYAfFGW0g/u4ehEkUpmgWmCAI/hd7TNBW/dyK
2rm+WUCNL9egSKmZQkjcwuPdIxMha4t3myxXN4MSgT2IVYyCbkB8Bs7njfNkidaSiro+USnjE+Pf
alkA/0Z0Ku591de/goD1+EbR4RHUz04kwAXdz8iX2G6wTJ3y58M02G6PCirohU9TiyqT8xiVjS+A
0PW67zstC6k9RxerGLLaO93CE5ZsP7RImax32gu8UGFLdptIqRpdConNKK0GC0zIXKZBQUp6OeU1
rE72kl3Gi1TImaVV+JSlzCbYzjA8vQTreU+Ekp6UIQUdbB9t0EFrCdO2gYhWqJ31vw8Edk/fUgih
nOZGQwd4tPMJR3K/ADk+txRSUNHIwk4vJT1s+JpfkfyvUE+QQXn9E3DYBCdlIhkNpGzY3N4lTBf/
Zkwqkt2Hdh5idbAFwitrniAoJXjp3fQnl4Ni3CISZo0WmeASFF3f0o7zQpKyacExBdX10M6vqqOF
xN5KyODPHPx/F1d6RiZ6R6Vcj07ziaJDpgLjMnqEOwji4REaF5yYNTOjoKimweN2XEB8OpfHE/zr
7vio2z6bUZ339FlbN+dpA6uT09PSyW7pesVgNhXV1KcUMOgF5cCpa3nJ7unNr2IymI0ltQ30Aizd
TyqZNc0vshhVwE/OK4OsFVTXATO/uu5FZ5fgfXfotCBIJBTXfJuCCwGuOahZo/N+tl7BN2PormEP
4Sg7csHPihaoZXeV5ODuFhbreCOC09dv6Oxz5LyvgZNnbGZ+aEp2YHz6IWdvAyevE94hd1JzLWkB
5HM+DtfD9lIvxOUWOd4ID03KnLvnZ7FQhHD5gyOj/rGpEKT61nY4TDtf90JgshmV99IeJ+eVwKKj
M/PhfINgxOUUBydmQuQgKi3sV0l5JVDgVc0tEfTsrLLq8rpmeiEDjhW4IiLpORBFwcy9PhcLCfok
+ChB2L82/HIXrgdv4VsGawh7p//ZCdszBMym29O/8zB/kml8lKD/E2JBoiAWJApiQaIgFiQKYkGi
IBYkCmJBovAP2aGJ1DgyOQcAAAAASUVORK5CYII=]]></avatar><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><PropertyBindings><PropertyBinding aspect.source="" aspect.startType="null" aspect.tagAddress="" name="talk2MAccount" sourceName="talk2MAccount" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.tagAddress="" name="talk2MDeveloperID" sourceName="talk2MDeveloperID" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.tagAddress="" name="talk2MPassword" sourceName="talk2MPassword" sourceThingName="ConnectorHost"/><PropertyBinding aspect.source="" aspect.tagAddress="" name="talk2MUsername" sourceName="talk2MUsername" sourceThingName="ConnectorHost"/></PropertyBindings><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="talk2MDeviceName"/></AlertConfigurations><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="This is the name of the Ewon device as it appears in Talk2M. For Ewon devices connected using the direct data path, this additional parameter is required because the Ewon may have a different name or identification in Talk2M." isLocalOnly="false" name="talk2MDeviceName" ordinal="2"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadAllTagsLive"><ResultType aspect.dataShape="M2Web-Live-Data" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadBooleanTagLive"><ResultType baseType="BOOLEAN" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" aspect.isRequired="true" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadDwordTagLive"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" aspect.isRequired="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadFloatTagLive"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadIntegerTagLive"><ResultType baseType="INTEGER" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="d2c" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ReadStringTagLive"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="useCached" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="Talk2M" description="Sends the current Ewon device to offline mode using Talk2M" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="SendEwonOffline"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="Talk2M" description="Wakes the current Ewon device via Talk2M." isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WakeEwonDevice"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteBooleanTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="BOOLEAN" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteDwordTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="NUMBER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteFloatTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="NUMBER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteIntegerTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="INTEGER" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="c2d" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="WriteStringTag"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagName" ordinal="1"/><FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="tagValue" ordinal="2"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="ReadAllTagsLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadAllTagsLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadBooleanTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadBooleanTagLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadDwordTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadDwordTagLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadFloatTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadFloatTagLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadIntegerTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadIntegerTagLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ReadStringTagLive"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[let result = me.ReadStringTagLiveGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagName: tagName /* STRING */,
    useCached: useCached /* BOOLEAN */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="SendEwonOffline"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Sets the current Ewon device to offline mode via Talk2M.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// simple wrapper function to facilitate early returns
function run() {
  var host = 'https://m2web.talk2m.com/t2mapi/';
  var command = 'getewon?name=' + me.talk2MDeviceName;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;

  var params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends API request to DataMailbox
  var result = Resources['ContentLoaderFunctions'].GetJSON(params);
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in SendEwonOffline. Error: ' +
        result['message']
    );
    return;
  }
  var ewon = result.ewon;
  var status = ewon.status;
    command = 'sendoffline?name=' + me.talk2MDeviceName;

  params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends the api request to DataMailBox
  result = Resources['ContentLoaderFunctions'].GetJSON(params);
  logger.warn(JSON.stringify(result));
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in SendEwonOffline. Error: ' +
        result['message']
    );
    return;
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WakeEwonDevice"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[/*
 * Wakes up the current Ewon device and sets it to online mode via Talk2M.
 *
 * @author HMS Networks, MU Americas Solution Center
 */
// simple wrapper function to facilitate early returns
function run() {
  var host = 'https://m2web.talk2m.com/t2mapi/';
  var command = 'getewon?name=' + me.talk2MDeviceName;
  var credentials =
    '&t2maccount=' +
    me.talk2MAccount +
    '&t2musername=' +
    me.talk2MUsername +
    '&t2mpassword=' +
    me.talk2MPassword +
    '&t2mdeveloperid=' +
    me.talk2MDeveloperID;

  var params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends API request to DataMailbox
  var result = Resources['ContentLoaderFunctions'].GetJSON(params);
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in WakeEwonDevice. Error: ' +
        result['message']
    );
    return;
  }
  var ewon = result.ewon;
  var status = ewon.status;
    command = 'wakeup?name=' + me.talk2MDeviceName;

  params = {
    url: encodeURI(host + command + credentials) /* STRING */,
  };

  // sends the api request to DataMailBox
  result = Resources['ContentLoaderFunctions'].GetJSON(params);
  logger.warn(JSON.stringify(result));
  if (!result.success) {
    logger.error(
      'Error calling DataMailbox API in WakeEwonDevice. Error: ' +
        result['message']
    );
    return;
  }
}
run();
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteBooleanTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteBooleanTagGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagValue: tagValue /* BOOLEAN */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteDwordTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteDwordTagGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagValue: tagValue /* NUMBER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteFloatTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteFloatTagGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagValue: tagValue /* NUMBER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteIntegerTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteIntegerTagGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagValue: tagValue /* INTEGER */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="WriteStringTag"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.WriteStringTagGenericService({
	ewonName: me.talk2MDeviceName /* STRING */,
	tagValue: tagValue /* STRING */,
	tagName: tagName /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><ImplementedShapes/><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, description : updated&#10;" timestamp="2020-10-08T14:34:25.882Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="properties : talk2MDeviceName : added&#10;" timestamp="2020-10-08T14:37:23.819Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T14:38:37.523Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T14:39:14.168Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WakeEwonDevice : service updated&#10;" timestamp="2020-10-08T14:40:09.316Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : description : updated&#10;" timestamp="2020-10-08T15:17:39.144Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:23:34.868Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:24:13.004Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : []" timestamp="2020-10-08T15:25:11.736Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2020-10-08T15:25:11.752Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-08T15:35:51.504Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-08T15:35:57.944Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-08T15:36:04.838Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:49:44.602Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-10-08T15:52:22.830Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-12T12:14:42.666Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : SendEwonOffline : service updated&#10;" timestamp="2020-10-12T12:14:47.645Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-12T12:15:23.761Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WakeEwonDevice : service updated&#10;" timestamp="2020-10-12T12:16:08.753Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:03:54.134Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:05:41.322Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service updated&#10;" timestamp="2020-10-13T13:13:15.539Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2020-11-30T13:22:13.329Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2021-04-06T13:41:54.522Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateEwonTagValue : service deleted&#10;" timestamp="2021-04-27T13:43:08.711Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service added&#10;" timestamp="2021-04-27T13:49:07.882Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service updated&#10;" timestamp="2021-04-27T13:50:20.793Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service updated&#10;" timestamp="2021-04-27T13:51:21.914Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service updated&#10;" timestamp="2021-04-27T13:51:36.524Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteBooleanTag : service updated&#10;WriteFloatTag : service added&#10;" timestamp="2021-04-27T13:52:43.844Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteFloatTag : input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T13:54:43.840Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : service added&#10;" timestamp="2021-04-27T13:55:19.584Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T13:55:34.478Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteIntegerTag : service updated&#10;" timestamp="2021-04-27T13:55:39.734Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service added, input parameter tagValue updated, inputs updated&#10;" timestamp="2021-04-27T13:56:24.229Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteStringTag : service updated&#10;" timestamp="2021-04-27T13:56:30.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : WriteDwordTag : service added&#10;" timestamp="2021-04-27T14:18:14.157Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-05-03T14:02:20.985Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [EwonThingworxConnector]" timestamp="2021-05-03T14:02:20.994Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service added&#10;" timestamp="2021-05-12T16:26:39.516Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated&#10;ReadStringTagLive : service added&#10;" timestamp="2021-05-12T16:28:27.804Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLive : service updated&#10;ReadIntegerTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:29:09.069Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLive : service updated&#10;ReadStringTagLive : output updated&#10;" timestamp="2021-05-12T16:29:24.089Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadStringTagLive : service updated&#10;ReadFloatTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:30:12.958Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLive : service updated&#10;ReadDwordTagLive : service added&#10;" timestamp="2021-05-12T16:30:38.237Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLive : service updated&#10;ReadBooleanTagLive : service added, output updated&#10;" timestamp="2021-05-12T16:31:06.431Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : output updated&#10;" timestamp="2021-05-12T16:32:57.787Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:02:11.062Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated&#10;" timestamp="2021-05-17T18:02:26.813Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadAllTagsLive : service updated&#10;ReadBooleanTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:02:48.204Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadBooleanTagLive : service updated&#10;ReadDwordTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:03:08.221Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadDwordTagLive : service updated&#10;ReadFloatTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:03:37.670Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadFloatTagLive : service updated&#10;ReadIntegerTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:03:54.251Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : ReadIntegerTagLive : service updated&#10;ReadStringTagLive : input parameter useCached added, inputs updated&#10;" timestamp="2021-05-17T18:04:09.730Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-08T19:31:48.460Z" user="Administrator"/></ConfigurationChanges></ThingTemplate></ThingTemplates><ExtensionPackages/><Organizations/><Menus/><ThingGroups/><Resources/><DataTags/><ThingShapes/><Subsystems/><NotificationContents/></Entities>